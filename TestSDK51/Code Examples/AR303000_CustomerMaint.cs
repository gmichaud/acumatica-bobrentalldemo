#region Date: Friday, December 26, 2014
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Controls.Button;
using Controls.CheckBox;
using Controls.Container;
using Controls.Editors.DateSelector;
using Controls.Editors.DropDown;
using Controls.Editors.EmailEdit;
using Controls.Editors.LinkEdit;
using Controls.Editors.Selector;
using Controls.Grid;
using Controls.Grid.Filter;
using Controls.Grid.Upload;
using Controls.Input;
using Controls.PxControlCollection;
using Controls.ToolBarButton;
using Core.Core.Browser;
using System;


namespace Core {
    
    
    public class AR303000_CustomerMaint : BaseWrapper {
        
        public PxToolBar ToolBar {get;set;} //;
        
        private c_baccount_baccount baccount_baccount;
        
        private c_firstselect_formactions firstselect_formactions;
        
        private c_vieweleminfo_formeleminfo vieweleminfo_formeleminfo;
        
        private c_filterworkingproject_formnewproject filterworkingproject_formnewproject;
        
        private c_filterworkingproject_formselectproject filterworkingproject_formselectproject;
        
        private c_currentcustomer_tab currentcustomer_tab;
        
        private c_defaddress_defaddress defaddress_defaddress;
        
        private c_billaddress_billaddress billaddress_billaddress;
        
        private c_defcontact_defcontact defcontact_defcontact;
        
        private c_deflocationcontact_deflocationcontact deflocationcontact_deflocationcontact;
        
        private c_billcontact_billcontact billcontact_billcontact;
        
        private c_locations_grdlocations locations_grdlocations;
        
        private c_locations_lv0 locations_lv0;
        
        private c_deflocation_deflocationaccount deflocation_deflocationaccount;
        
        private c_deflocation_deflocation deflocation_deflocation;
        
        private c_extcontacts_grdcontacts extcontacts_grdcontacts;
        
        private c_extcontacts_lv0 extcontacts_lv0;
        
        private c_salespersons_pxgrid1 salespersons_pxgrid1;
        
        private c_salespersons_lv0 salespersons_lv0;
        
        private c_customerbalance_customerbalance customerbalance_customerbalance;
        
        private c_carriers_pxgridaccounts carriers_pxgridaccounts;
        
        private c_carriers_lv0 carriers_lv0;
        
        private c_defpaymentmethodinstance_defpaymentmethodinstance defpaymentmethodinstance_defpaymentmethodinstance;
        
        private c_paymentmethods_lv0 paymentmethods_lv0;
        
        private c_paymentmethods_grdpaymentmethods paymentmethods_grdpaymentmethods;
        
        private c_answers_lv0 answers_lv0;
        
        private c_answers_pxgridanswers answers_pxgridanswers;
        
        private c_defpaymentmethodinstancedetails_grdpminstancedetails defpaymentmethodinstancedetails_grdpminstancedetails;
        
        private c_defpaymentmethodinstancedetails_lv0 defpaymentmethodinstancedetails_lv0;
        
        private c_notificationsources_gridns notificationsources_gridns;
        
        private c_notificationsources_lv0 notificationsources_lv0;
        
        private c_notificationrecipients_gridnr notificationrecipients_gridnr;
        
        private c_notificationrecipients_lv0 notificationrecipients_lv0;
        
        private c_changeiddialog_formchangeid changeiddialog_formchangeid;
        
		public virtual void ClearFilter ()
		{
			ToolBar.ClearFilter.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Note ()
		{
			ToolBar.Note.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ActivityShow ()
		{
			ToolBar.ActivityShow.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void FilesMenuShow ()
		{
			ToolBar.FilesMenuShow.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void NotifyShow ()
		{
			ToolBar.NotifyShow.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Custom ()
		{
			ToolBar.Custom.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void SelectProject ()
		{
			ToolBar.SelectProject.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void InspectelementCtrlAtlClick ()
		{
			ToolBar.InspectelementCtrlAtlClick.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void EditProject ()
		{
			ToolBar.EditProject.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ManageCustomizations ()
		{
			ToolBar.ManageCustomizations.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ActionNavigateAspx ()
		{
			ToolBar.ActionNavigateAspx.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ActionCreateNewProject ()
		{
			ToolBar.ActionCreateNewProject.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuLayoutEditor ()
		{
			ToolBar.MenuLayoutEditor.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuEditProj ()
		{
			ToolBar.MenuEditProj.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuDacEditor ()
		{
			ToolBar.MenuDacEditor.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuGraphEditor ()
		{
			ToolBar.MenuGraphEditor.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuLayoutSrc ()
		{
			ToolBar.MenuLayoutSrc.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuGraphSrc ()
		{
			ToolBar.MenuGraphSrc.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuDacSrc ()
		{
			ToolBar.MenuDacSrc.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuLayoutVS ()
		{
			ToolBar.MenuLayoutVS.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuDacVS ()
		{
			ToolBar.MenuDacVS.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void MenuGraphVS ()
		{
			ToolBar.MenuGraphVS.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ActionSelectWorkingProject ()
		{
			ToolBar.ActionSelectWorkingProject.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void LongRun ()
		{
			ToolBar.LongRun.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ElapsedTime ()
		{
			ToolBar.ElapsedTime.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Save()
		{
			if(ToolBar.Save.IsEnabled())
			{
				ToolBar.Save.ClickAndWait();
				Browser.TraceErrors();
				if (Browser.GetBrowser().Alert != null)
				{
 					throw new Exception("ALERT: " + Browser.GetBrowser().Alert.Message); 
				}
			}
		}
		public virtual void Cancel ()
		{
			ToolBar.Cancel.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Insert ()
		{
			ToolBar.Insert.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Clipboard ()
		{
			ToolBar.Clipboard.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Delete ()
		{
			ToolBar.Delete.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void First ()
		{
			ToolBar.First.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Prev ()
		{
			ToolBar.Prev.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Next ()
		{
			ToolBar.Next.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Last ()
		{
			ToolBar.Last.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ViewActivity ()
		{
			ToolBar.ViewActivity.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void OpenActivityOwner ()
		{
			ToolBar.OpenActivityOwner.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ViewAllActivities ()
		{
			ToolBar.ViewAllActivities.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Actions ()
		{
			ToolBar.Actions.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Inquiries ()
		{
			ToolBar.Inquiries.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void Reports ()
		{
			ToolBar.Reports.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ChangeID ()
		{
			ToolBar.ChangeID.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void LongRun2 ()
		{
			ToolBar.LongRun2.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ElapsedTime2 ()
		{
			ToolBar.ElapsedTime2.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void CopyDocument ()
		{
			ToolBar.CopyDocument.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void PasteDocument ()
		{
			ToolBar.PasteDocument.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void SaveTemplate ()
		{
			ToolBar.SaveTemplate.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ViewVendor ()
		{
			ToolBar.ViewVendor.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ViewBusnessAccount ()
		{
			ToolBar.ViewBusnessAccount.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void NewInvoiceMemo ()
		{
			ToolBar.NewInvoiceMemo.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void NewSalesOrder ()
		{
			ToolBar.NewSalesOrder.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void NewPayment ()
		{
			ToolBar.NewPayment.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void WriteOffBalance ()
		{
			ToolBar.WriteOffBalance.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ExtendToVendor ()
		{
			ToolBar.ExtendToVendor.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ViewRestrictionGroups ()
		{
			ToolBar.ViewRestrictionGroups.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void RegenerateLastStatement ()
		{
			ToolBar.RegenerateLastStatement.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ValidateAddresses ()
		{
			ToolBar.ValidateAddresses.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void CustomerDocuments ()
		{
			ToolBar.CustomerDocuments.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void StatementForCustomer ()
		{
			ToolBar.StatementForCustomer.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void SalesPrice ()
		{
			ToolBar.SalesPrice.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ARBalanceByCustomer ()
		{
			ToolBar.ARBalanceByCustomer.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void CustomerHistory ()
		{
			ToolBar.CustomerHistory.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ARAgedPastDue ()
		{
			ToolBar.ARAgedPastDue.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ARAgedOutstanding ()
		{
			ToolBar.ARAgedOutstanding.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void ARRegister ()
		{
			ToolBar.ARRegister.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void CustomerDetails ()
		{
			ToolBar.CustomerDetails.ClickAndWait();
			Browser.TraceErrors();
		}
		public virtual void CustomerStatement ()
		{
			ToolBar.CustomerStatement.ClickAndWait();
			Browser.TraceErrors();
		}
        
        public AR303000_CustomerMaint() {
            ScreenId = "AR303000";
            ScreenUrl = "/Pages/AR/AR303000.aspx";
            ToolBar = new PxToolBar();
            baccount_baccount = new c_baccount_baccount("ctl00_phF_BAccount", "BAccount_BAccount", null, null, "AR303000");
            firstselect_formactions = new c_firstselect_formactions("ctl00_usrCaption_CustomizationDialogs_PXSmartPanel1_FormActions", "FirstSelect_FormActions", null, null, "AR303000");
            vieweleminfo_formeleminfo = new c_vieweleminfo_formeleminfo("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo", "ViewElemInfo_FormElemInfo", null, null, "AR303000");
            filterworkingproject_formnewproject = new c_filterworkingproject_formnewproject("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject", "FilterWorkingProject_FormNewProject", null, null, "AR303000");
            filterworkingproject_formselectproject = new c_filterworkingproject_formselectproject("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject", "FilterWorkingProject_FormSelectProject", null, null, "AR303000");
            currentcustomer_tab = new c_currentcustomer_tab("ctl00_phG_tab", "CurrentCustomer_tab", null, null, "AR303000");
            defaddress_defaddress = new c_defaddress_defaddress("ctl00_phG_tab_t0_DefAddress", "DefAddress_DefAddress", null, null, "AR303000");
            billaddress_billaddress = new c_billaddress_billaddress("ctl00_phG_tab_t1_BillAddress", "BillAddress_BillAddress", null, null, "AR303000");
            defcontact_defcontact = new c_defcontact_defcontact("ctl00_phG_tab_t0_DefContact", "DefContact_DefContact", null, null, "AR303000");
            deflocationcontact_deflocationcontact = new c_deflocationcontact_deflocationcontact("ctl00_phG_tab_t2_DefLocation_DefLocationContact", "DefLocationContact_DefLocationContact", null, null, "AR303000");
            billcontact_billcontact = new c_billcontact_billcontact("ctl00_phG_tab_t1_BillContact", "BillContact_BillContact", null, null, "AR303000");
            locations_grdlocations = new c_locations_grdlocations(c_locations_grdlocations.GridLocator, c_locations_grdlocations.GridName);
            locations_lv0 = new c_locations_lv0("ctl00_phG_tab_t3_grdLocations_lv0", "Locations_lv0", null, null, "AR303000");
            deflocation_deflocationaccount = new c_deflocation_deflocationaccount("ctl00_phG_tab_t8_DefLocationAccount", "DefLocation_DefLocationAccount", null, null, "AR303000");
            deflocation_deflocation = new c_deflocation_deflocation("ctl00_phG_tab_t2_DefLocation", "DefLocation_DefLocation", null, null, "AR303000");
            extcontacts_grdcontacts = new c_extcontacts_grdcontacts(c_extcontacts_grdcontacts.GridLocator, c_extcontacts_grdcontacts.GridName);
            extcontacts_lv0 = new c_extcontacts_lv0("ctl00_phG_tab_t5_grdContacts_lv0", "ExtContacts_lv0", null, null, "AR303000");
            salespersons_pxgrid1 = new c_salespersons_pxgrid1(c_salespersons_pxgrid1.GridLocator, c_salespersons_pxgrid1.GridName);
            salespersons_lv0 = new c_salespersons_lv0("ctl00_phG_tab_t6_PXGrid1_lv0", "SalesPersons_lv0", null, null, "AR303000");
            customerbalance_customerbalance = new c_customerbalance_customerbalance("ctl00_phG_tab_t0_CustomerBalance", "CustomerBalance_CustomerBalance", null, null, "AR303000");
            carriers_pxgridaccounts = new c_carriers_pxgridaccounts(c_carriers_pxgridaccounts.GridLocator, c_carriers_pxgridaccounts.GridName);
            carriers_lv0 = new c_carriers_lv0("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0", "Carriers_lv0", null, null, "AR303000");
            defpaymentmethodinstance_defpaymentmethodinstance = new c_defpaymentmethodinstance_defpaymentmethodinstance("ctl00_phG_tab_t1_DefPaymentMethodInstance", "DefPaymentMethodInstance_DefPaymentMethodInstance", null, null, "AR303000");
            paymentmethods_lv0 = new c_paymentmethods_lv0("ctl00_phG_tab_t4_grdPaymentMethods_lv0", "PaymentMethods_lv0", null, null, "AR303000");
            paymentmethods_grdpaymentmethods = new c_paymentmethods_grdpaymentmethods(c_paymentmethods_grdpaymentmethods.GridLocator, c_paymentmethods_grdpaymentmethods.GridName);
            answers_lv0 = new c_answers_lv0("ctl00_phG_tab_t7_PXGridAnswers_lv0", "Answers_lv0", null, null, "AR303000");
            answers_pxgridanswers = new c_answers_pxgridanswers(c_answers_pxgridanswers.GridLocator, c_answers_pxgridanswers.GridName);
            defpaymentmethodinstancedetails_grdpminstancedetails = new c_defpaymentmethodinstancedetails_grdpminstancedetails(c_defpaymentmethodinstancedetails_grdpminstancedetails.GridLocator, c_defpaymentmethodinstancedetails_grdpminstancedetails.GridName);
            defpaymentmethodinstancedetails_lv0 = new c_defpaymentmethodinstancedetails_lv0("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0", "DefPaymentMethodInstanceDetails_lv0", null, null, "AR303000");
            notificationsources_gridns = new c_notificationsources_gridns(c_notificationsources_gridns.GridLocator, c_notificationsources_gridns.GridName);
            notificationsources_lv0 = new c_notificationsources_lv0("ctl00_phG_tab_t9_sp1_gridNS_lv0", "NotificationSources_lv0", null, null, "AR303000");
            notificationrecipients_gridnr = new c_notificationrecipients_gridnr(c_notificationrecipients_gridnr.GridLocator, c_notificationrecipients_gridnr.GridName);
            notificationrecipients_lv0 = new c_notificationrecipients_lv0("ctl00_phG_tab_t9_sp1_gridNR_lv0", "NotificationRecipients_lv0", null, null, "AR303000");
            changeiddialog_formchangeid = new c_changeiddialog_formchangeid("ctl00_phF_pnlChangeID_formChangeID", "ChangeIDDialog_formChangeID", null, null, "AR303000");
        }
        
        protected virtual c_baccount_baccount BAccount_BAccount {
            get {
                return baccount_baccount;
            }
            set {
                baccount_baccount = value;
            }
        }
        
        protected virtual c_firstselect_formactions FirstSelect_FormActions {
            get {
                return firstselect_formactions;
            }
            set {
                firstselect_formactions = value;
            }
        }
        
        protected virtual c_vieweleminfo_formeleminfo ViewElemInfo_FormElemInfo {
            get {
                return vieweleminfo_formeleminfo;
            }
            set {
                vieweleminfo_formeleminfo = value;
            }
        }
        
        protected virtual c_filterworkingproject_formnewproject FilterWorkingProject_FormNewProject {
            get {
                return filterworkingproject_formnewproject;
            }
            set {
                filterworkingproject_formnewproject = value;
            }
        }
        
        protected virtual c_filterworkingproject_formselectproject FilterWorkingProject_FormSelectProject {
            get {
                return filterworkingproject_formselectproject;
            }
            set {
                filterworkingproject_formselectproject = value;
            }
        }
        
        protected virtual c_currentcustomer_tab CurrentCustomer_tab {
            get {
                return currentcustomer_tab;
            }
            set {
                currentcustomer_tab = value;
            }
        }
        
        protected virtual c_defaddress_defaddress DefAddress_DefAddress {
            get {
                return defaddress_defaddress;
            }
            set {
                defaddress_defaddress = value;
            }
        }
        
        protected virtual c_billaddress_billaddress BillAddress_BillAddress {
            get {
                return billaddress_billaddress;
            }
            set {
                billaddress_billaddress = value;
            }
        }
        
        protected virtual c_defcontact_defcontact DefContact_DefContact {
            get {
                return defcontact_defcontact;
            }
            set {
                defcontact_defcontact = value;
            }
        }
        
        protected virtual c_deflocationcontact_deflocationcontact DefLocationContact_DefLocationContact {
            get {
                return deflocationcontact_deflocationcontact;
            }
            set {
                deflocationcontact_deflocationcontact = value;
            }
        }
        
        protected virtual c_billcontact_billcontact BillContact_BillContact {
            get {
                return billcontact_billcontact;
            }
            set {
                billcontact_billcontact = value;
            }
        }
        
        protected virtual c_locations_grdlocations Locations_grdLocations {
            get {
                return locations_grdlocations;
            }
            set {
                locations_grdlocations = value;
            }
        }
        
        protected virtual c_locations_lv0 Locations_lv0 {
            get {
                return locations_lv0;
            }
            set {
                locations_lv0 = value;
            }
        }
        
        protected virtual c_deflocation_deflocationaccount DefLocation_DefLocationAccount {
            get {
                return deflocation_deflocationaccount;
            }
            set {
                deflocation_deflocationaccount = value;
            }
        }
        
        protected virtual c_deflocation_deflocation DefLocation_DefLocation {
            get {
                return deflocation_deflocation;
            }
            set {
                deflocation_deflocation = value;
            }
        }
        
        protected virtual c_extcontacts_grdcontacts ExtContacts_grdContacts {
            get {
                return extcontacts_grdcontacts;
            }
            set {
                extcontacts_grdcontacts = value;
            }
        }
        
        protected virtual c_extcontacts_lv0 ExtContacts_lv0 {
            get {
                return extcontacts_lv0;
            }
            set {
                extcontacts_lv0 = value;
            }
        }
        
        protected virtual c_salespersons_pxgrid1 SalesPersons_PXGrid1 {
            get {
                return salespersons_pxgrid1;
            }
            set {
                salespersons_pxgrid1 = value;
            }
        }
        
        protected virtual c_salespersons_lv0 SalesPersons_lv0 {
            get {
                return salespersons_lv0;
            }
            set {
                salespersons_lv0 = value;
            }
        }
        
        protected virtual c_customerbalance_customerbalance CustomerBalance_CustomerBalance {
            get {
                return customerbalance_customerbalance;
            }
            set {
                customerbalance_customerbalance = value;
            }
        }
        
        protected virtual c_carriers_pxgridaccounts Carriers_PXGridAccounts {
            get {
                return carriers_pxgridaccounts;
            }
            set {
                carriers_pxgridaccounts = value;
            }
        }
        
        protected virtual c_carriers_lv0 Carriers_lv0 {
            get {
                return carriers_lv0;
            }
            set {
                carriers_lv0 = value;
            }
        }
        
        protected virtual c_defpaymentmethodinstance_defpaymentmethodinstance DefPaymentMethodInstance_DefPaymentMethodInstance {
            get {
                return defpaymentmethodinstance_defpaymentmethodinstance;
            }
            set {
                defpaymentmethodinstance_defpaymentmethodinstance = value;
            }
        }
        
        protected virtual c_paymentmethods_lv0 PaymentMethods_lv0 {
            get {
                return paymentmethods_lv0;
            }
            set {
                paymentmethods_lv0 = value;
            }
        }
        
        protected virtual c_paymentmethods_grdpaymentmethods PaymentMethods_grdPaymentMethods {
            get {
                return paymentmethods_grdpaymentmethods;
            }
            set {
                paymentmethods_grdpaymentmethods = value;
            }
        }
        
        protected virtual c_answers_lv0 Answers_lv0 {
            get {
                return answers_lv0;
            }
            set {
                answers_lv0 = value;
            }
        }
        
        protected virtual c_answers_pxgridanswers Answers_PXGridAnswers {
            get {
                return answers_pxgridanswers;
            }
            set {
                answers_pxgridanswers = value;
            }
        }
        
        protected virtual c_defpaymentmethodinstancedetails_grdpminstancedetails DefPaymentMethodInstanceDetails_grdPMInstanceDetails {
            get {
                return defpaymentmethodinstancedetails_grdpminstancedetails;
            }
            set {
                defpaymentmethodinstancedetails_grdpminstancedetails = value;
            }
        }
        
        protected virtual c_defpaymentmethodinstancedetails_lv0 DefPaymentMethodInstanceDetails_lv0 {
            get {
                return defpaymentmethodinstancedetails_lv0;
            }
            set {
                defpaymentmethodinstancedetails_lv0 = value;
            }
        }
        
        protected virtual c_notificationsources_gridns NotificationSources_gridNS {
            get {
                return notificationsources_gridns;
            }
            set {
                notificationsources_gridns = value;
            }
        }
        
        protected virtual c_notificationsources_lv0 NotificationSources_lv0 {
            get {
                return notificationsources_lv0;
            }
            set {
                notificationsources_lv0 = value;
            }
        }
        
        protected virtual c_notificationrecipients_gridnr NotificationRecipients_gridNR {
            get {
                return notificationrecipients_gridnr;
            }
            set {
                notificationrecipients_gridnr = value;
            }
        }
        
        protected virtual c_notificationrecipients_lv0 NotificationRecipients_lv0 {
            get {
                return notificationrecipients_lv0;
            }
            set {
                notificationrecipients_lv0 = value;
            }
        }
        
        protected virtual c_changeiddialog_formchangeid ChangeIDDialog_formChangeID {
            get {
                return changeiddialog_formchangeid;
            }
            set {
                changeiddialog_formchangeid = value;
            }
        }
        
        public class PxToolBar : PxControlCollection {
            
			public ToolBarButton ClearFilter {get;private set;}
			public ToolBarButton Note {get;private set;}
			public ToolBarButton ActivityShow {get;private set;}
			public ToolBarButton FilesMenuShow {get;private set;}
			public ToolBarButton NotifyShow {get;private set;}
			public ToolBarButton Custom {get;private set;}
			public ToolBarButton SelectProject {get;private set;}
			public ToolBarButton InspectelementCtrlAtlClick {get;private set;}
			public ToolBarButton EditProject {get;private set;}
			public ToolBarButton ManageCustomizations {get;private set;}
			public ToolBarButton ActionNavigateAspx {get;private set;}
			public ToolBarButton ActionCreateNewProject {get;private set;}
			public ToolBarButton MenuLayoutEditor {get;private set;}
			public ToolBarButton MenuEditProj {get;private set;}
			public ToolBarButton MenuDacEditor {get;private set;}
			public ToolBarButton MenuGraphEditor {get;private set;}
			public ToolBarButton MenuLayoutSrc {get;private set;}
			public ToolBarButton MenuGraphSrc {get;private set;}
			public ToolBarButton MenuDacSrc {get;private set;}
			public ToolBarButton MenuLayoutVS {get;private set;}
			public ToolBarButton MenuDacVS {get;private set;}
			public ToolBarButton MenuGraphVS {get;private set;}
			public ToolBarButton ActionSelectWorkingProject {get;private set;}
			public ToolBarButton LongRun {get;private set;}
			public ToolBarButton ElapsedTime {get;private set;}
			public ToolBarButton Save {get;private set;}
			public ToolBarButton Cancel {get;private set;}
			public ToolBarButton Insert {get;private set;}
			public ToolBarButton Clipboard {get;private set;}
			public ToolBarButton Delete {get;private set;}
			public ToolBarButton First {get;private set;}
			public ToolBarButton Prev {get;private set;}
			public ToolBarButton Next {get;private set;}
			public ToolBarButton Last {get;private set;}
			public ToolBarButton ViewActivity {get;private set;}
			public ToolBarButton OpenActivityOwner {get;private set;}
			public ToolBarButton ViewAllActivities {get;private set;}
			public ToolBarButton Actions {get;private set;}
			public ToolBarButton Inquiries {get;private set;}
			public ToolBarButton Reports {get;private set;}
			public ToolBarButton ChangeID {get;private set;}
			public ToolBarButton LongRun2 {get;private set;}
			public ToolBarButton ElapsedTime2 {get;private set;}
			public ToolBarButton CopyDocument {get;private set;}
			public ToolBarButton PasteDocument {get;private set;}
			public ToolBarButton SaveTemplate {get;private set;}
			public ToolBarButton ViewVendor {get;private set;}
			public ToolBarButton ViewBusnessAccount {get;private set;}
			public ToolBarButton NewInvoiceMemo {get;private set;}
			public ToolBarButton NewSalesOrder {get;private set;}
			public ToolBarButton NewPayment {get;private set;}
			public ToolBarButton WriteOffBalance {get;private set;}
			public ToolBarButton ExtendToVendor {get;private set;}
			public ToolBarButton ViewRestrictionGroups {get;private set;}
			public ToolBarButton RegenerateLastStatement {get;private set;}
			public ToolBarButton ValidateAddresses {get;private set;}
			public ToolBarButton CustomerDocuments {get;private set;}
			public ToolBarButton StatementForCustomer {get;private set;}
			public ToolBarButton SalesPrice {get;private set;}
			public ToolBarButton ARBalanceByCustomer {get;private set;}
			public ToolBarButton CustomerHistory {get;private set;}
			public ToolBarButton ARAgedPastDue {get;private set;}
			public ToolBarButton ARAgedOutstanding {get;private set;}
			public ToolBarButton ARRegister {get;private set;}
			public ToolBarButton CustomerDetails {get;private set;}
			public ToolBarButton CustomerStatement {get;private set;}
            
            public PxToolBar() {
                Initialize();
            }
            
            private void Initialize() {
                ClearFilter = new ToolBarButton("css=div[data-cmd='clearFilter']", "ClearFilter", "", null, "AR303000");
                Note = new ToolBarButton("css=div[data-cmd='NoteShow']", "Note", "", null, "AR303000");
                ActivityShow = new ToolBarButton("css=div[data-cmd='ActivityShow']", "ActivityShow", "", null, "AR303000");
                FilesMenuShow = new ToolBarButton("css=div[data-cmd='FilesMenuShow']", "FilesMenuShow", "", null, "AR303000");
                NotifyShow = new ToolBarButton("css=div[data-cmd='NotifyShow']", "NotifyShow", "", null, "AR303000");
                Custom = new ToolBarButton("css=div[data-cmd='Custom']", "Custom", "", null, "AR303000");
                SelectProject = new ToolBarButton("ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom_item_0", "SelectProject", "", null, "AR303000");
                InspectelementCtrlAtlClick = new ToolBarButton("ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom_item_1", "InspectelementCtrlAtlClick", "", null, "AR303000");
                EditProject = new ToolBarButton("ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom_item_2", "EditProject", "", null, "AR303000");
                ManageCustomizations = new ToolBarButton("ctl00_usrCaption_CustomizationDialogs_PXToolBar1_menuCustom_item_3", "ManageCustomizations", "", null, "AR303000");
                ActionNavigateAspx = new ToolBarButton("css=div[data-cmd='actionNavigateAspx']", "ActionNavigateAspx", "", null, "AR303000");
                ActionCreateNewProject = new ToolBarButton("css=div[data-cmd='actionCreateNewProject']", "ActionCreateNewProject", "", null, "AR303000");
                MenuLayoutEditor = new ToolBarButton("css=div[data-cmd='menuLayoutEditor']", "MenuLayoutEditor", "", null, "AR303000");
                MenuEditProj = new ToolBarButton("css=div[data-cmd='menuEditProj']", "MenuEditProj", "", null, "AR303000");
                MenuDacEditor = new ToolBarButton("css=div[data-cmd='menuDacEditor']", "MenuDacEditor", "", null, "AR303000");
                MenuGraphEditor = new ToolBarButton("css=div[data-cmd='menuGraphEditor']", "MenuGraphEditor", "", null, "AR303000");
                MenuLayoutSrc = new ToolBarButton("css=div[data-cmd='menuLayoutSrc']", "MenuLayoutSrc", "", null, "AR303000");
                MenuGraphSrc = new ToolBarButton("css=div[data-cmd='menuGraphSrc']", "MenuGraphSrc", "", null, "AR303000");
                MenuDacSrc = new ToolBarButton("css=div[data-cmd='menuDacSrc']", "MenuDacSrc", "", null, "AR303000");
                MenuLayoutVS = new ToolBarButton("css=div[data-cmd='menuLayoutVS']", "MenuLayoutVS", "", null, "AR303000");
                MenuDacVS = new ToolBarButton("css=div[data-cmd='menuDacVS']", "MenuDacVS", "", null, "AR303000");
                MenuGraphVS = new ToolBarButton("css=div[data-cmd='menuGraphVS']", "MenuGraphVS", "", null, "AR303000");
                ActionSelectWorkingProject = new ToolBarButton("css=div[data-cmd='actionSelectWorkingProject']", "ActionSelectWorkingProject", "", null, "AR303000");
                LongRun = new ToolBarButton("css=div[data-cmd='LongRun']", "LongRun", "", null, "AR303000");
                ElapsedTime = new ToolBarButton("css=div[data-cmd='ElapsedTime']", "ElapsedTime", "", null, "AR303000");
                Save = new ToolBarButton("css=div[data-cmd='Save']", "Save", "", null, "AR303000");
                Cancel = new ToolBarButton("css=div[data-cmd='Cancel']", "Cancel", "", null, "AR303000");
                Insert = new ToolBarButton("css=div[data-cmd='Insert']", "Insert", "", null, "AR303000");
                Clipboard = new ToolBarButton("css=li>div.toolsBtn[tooltip='Clipboard']", "Clipboard", "", null, "AR303000");
                Delete = new ToolBarButton("css=div[data-cmd='Delete']", "Delete", "", null, "AR303000");
                Delete.ConfirmAction = () => Browser.Confirm(true);
                First = new ToolBarButton("css=div[data-cmd='First']", "First", "", null, "AR303000");
                Prev = new ToolBarButton("css=div[data-cmd='Prev']", "Prev", "", null, "AR303000");
                Next = new ToolBarButton("css=div[data-cmd='Next']", "Next", "", null, "AR303000");
                Last = new ToolBarButton("css=div[data-cmd='Last']", "Last", "", null, "AR303000");
                ViewActivity = new ToolBarButton("css=div[data-cmd='ViewActivity']", "ViewActivity", "", null, "AR303000");
                OpenActivityOwner = new ToolBarButton("css=div[data-cmd='OpenActivityOwner']", "OpenActivityOwner", "", null, "AR303000");
                ViewAllActivities = new ToolBarButton("css=div[data-cmd='ViewAllActivities']", "ViewAllActivities", "", null, "AR303000");
                Actions = new ToolBarButton("css=div:contains('Actions') > div[data-type='drop']", "Actions", "", null, "AR303000");
                Inquiries = new ToolBarButton("css=div:contains('Inquiries') > div[data-type='drop']", "Inquiries", "", null, "AR303000");
                Reports = new ToolBarButton("css=div:contains('Reports') > div[data-type='drop']", "Reports", "", null, "AR303000");
                ChangeID = new ToolBarButton("css=li[data-cmd='Action@ChangeID']", "ChangeID", "", null, "AR303000");
                LongRun2 = new ToolBarButton("css=div[data-cmd='LongRun']", "LongRun2", "", null, "AR303000");
                ElapsedTime2 = new ToolBarButton("css=div[data-cmd='ElapsedTime']", "ElapsedTime2", "", null, "AR303000");
                CopyDocument = new ToolBarButton("css=li[data-cmd='Edit@CopyDocument']", "CopyDocument", "", null, "AR303000");
                PasteDocument = new ToolBarButton("css=li[data-cmd='Edit@PasteDocument']", "PasteDocument", "", null, "AR303000");
                SaveTemplate = new ToolBarButton("css=li[data-cmd='Edit@SaveTemplate']", "SaveTemplate", "", null, "AR303000");
                ViewVendor = new ToolBarButton("css=li[data-cmd='Action@ViewVendor']", "ViewVendor", "", null, "AR303000");
                ViewBusnessAccount = new ToolBarButton("css=li[data-cmd='Action@ViewBusnessAccount']", "ViewBusnessAccount", "", null, "AR303000");
                NewInvoiceMemo = new ToolBarButton("css=li[data-cmd='Action@NewInvoiceMemo']", "NewInvoiceMemo", "", null, "AR303000");
                NewSalesOrder = new ToolBarButton("css=li[data-cmd='Action@NewSalesOrder']", "NewSalesOrder", "", null, "AR303000");
                NewPayment = new ToolBarButton("css=li[data-cmd='Action@NewPayment']", "NewPayment", "", null, "AR303000");
                WriteOffBalance = new ToolBarButton("css=li[data-cmd='Action@WriteOffBalance']", "WriteOffBalance", "", null, "AR303000");
                ExtendToVendor = new ToolBarButton("css=li[data-cmd='Action@ExtendToVendor']", "ExtendToVendor", "", null, "AR303000");
                ViewRestrictionGroups = new ToolBarButton("css=li[data-cmd='Action@ViewRestrictionGroups']", "ViewRestrictionGroups", "", null, "AR303000");
                RegenerateLastStatement = new ToolBarButton("css=li[data-cmd='Action@RegenerateLastStatement']", "RegenerateLastStatement", "", null, "AR303000");
                ValidateAddresses = new ToolBarButton("css=li[data-cmd='Action@ValidateAddresses']", "ValidateAddresses", "", null, "AR303000");
                CustomerDocuments = new ToolBarButton("css=li[data-cmd='Inquiry@CustomerDocuments']", "CustomerDocuments", "", null, "AR303000");
                StatementForCustomer = new ToolBarButton("css=li[data-cmd='Inquiry@StatementForCustomer']", "StatementForCustomer", "", null, "AR303000");
                SalesPrice = new ToolBarButton("css=li[data-cmd='Inquiry@SalesPrice']", "SalesPrice", "", null, "AR303000");
                ARBalanceByCustomer = new ToolBarButton("css=li[data-cmd='Report@ARBalanceByCustomer']", "ARBalanceByCustomer", "", null, "AR303000");
                CustomerHistory = new ToolBarButton("css=li[data-cmd='Report@CustomerHistory']", "CustomerHistory", "", null, "AR303000");
                ARAgedPastDue = new ToolBarButton("css=li[data-cmd='Report@ARAgedPastDue']", "ARAgedPastDue", "", null, "AR303000");
                ARAgedOutstanding = new ToolBarButton("css=li[data-cmd='Report@ARAgedOutstanding']", "ARAgedOutstanding", "", null, "AR303000");
                ARRegister = new ToolBarButton("css=li[data-cmd='Report@ARRegister']", "ARRegister", "", null, "AR303000");
                CustomerDetails = new ToolBarButton("css=li[data-cmd='Report@CustomerDetails']", "CustomerDetails", "", null, "AR303000");
                CustomerStatement = new ToolBarButton("css=li[data-cmd='Report@CustomerStatement']", "CustomerStatement", "", null, "AR303000");
            }
        }
        
        public class c_baccount_baccount : Container {
            
			public Selector AcctCD {get;set;}
			public DropDown Status {get;set;}
			public Input AcctName {get;set;}
            
            public c_baccount_baccount(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_baccount_baccount(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                AcctCD = new Selector("ctl00_phF_BAccount_edAcctCD", "AcctCD", "ctl00_phF_BAccount", null, "AR303000");
                AcctCD.DataField = "AcctCD";
                Status = new DropDown("ctl00_phF_BAccount_edStatus", "Status", "ctl00_phF_BAccount", null, "AR303000");
                Status.DataField = "Status";
				Status.Items.Add("A","Active");
				Status.Items.Add("H","On Hold");
				Status.Items.Add("C","Credit Hold");
				Status.Items.Add("I","Inactive");
				Status.Items.Add("T","One-Time");
                AcctName = new Input("ctl00_phF_BAccount_edAcctName", "AcctName", "ctl00_phF_BAccount", null, "AR303000");
                AcctName.DataField = "AcctName";
                ContainerType = "U";
                DataMemberName = "BAccount";
            }
        }
        
        public class c_firstselect_formactions : Container {
            
			public Input Key {get;set;}
            
            public c_firstselect_formactions(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_firstselect_formactions(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                Key = new Input("ctl00_usrCaption_CustomizationDialogs_PXSmartPanel1_FormActions_edKey", "Key", "ctl00_usrCaption_CustomizationDialogs_PXSmartPanel1_FormActions", null, "AR303000");
                Key.DataField = "Key";
                ContainerType = "U";
                DataMemberName = "FirstSelect";
            }
        }
        
        public class c_vieweleminfo_formeleminfo : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Input AspxControl {get;set;}
			public Input CacheType {get;set;}
			public Input FieldName {get;set;}
			public Input GraphName {get;set;}
            
            public c_vieweleminfo_formeleminfo(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_vieweleminfo_formeleminfo(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Customize() {
                ActionClick(Buttons.Customize);
            }
            
            public virtual void Actions() {
                ActionClick(Buttons.Actions);
            }
            
            public virtual void Cancel() {
                ActionClick(Buttons.Cancel);
            }
            
            private void Initialize() {
                AspxControl = new Input("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_edAspxControl", "AspxControl", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo", null, "AR303000");
                AspxControl.DataField = "AspxControl";
                CacheType = new Input("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_CacheType", "CacheType", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo", null, "AR303000");
                CacheType.DataField = "CacheType";
                FieldName = new Input("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_FieldName", "FieldName", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo", null, "AR303000");
                FieldName.DataField = "FieldName";
                GraphName = new Input("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo_GraphName", "GraphName", "ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_FormElemInfo", null, "AR303000");
                GraphName.DataField = "GraphName";
                ContainerType = "U";
                DataMemberName = "ViewElemInfo";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Customize {get;private set;}
				public Button Actions {get;private set;}
				public Button Cancel {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Customize = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_PXButton3", "", null, null, "AR303000");
                    Actions = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_ButtonGraphActions", "", null, null, "AR303000");
                    Cancel = new Button("ctl00_usrCaption_CustomizationDialogs_PanelElemInfo_PXButton4", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_filterworkingproject_formnewproject : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Input NewProject {get;set;}
            
            public c_filterworkingproject_formnewproject(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_filterworkingproject_formnewproject(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Ok() {
                ActionClick(Buttons.Ok);
            }
            
            public virtual void Cancel() {
                ActionClick(Buttons.Cancel);
            }
            
            private void Initialize() {
                NewProject = new Input("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject_edNewProject", "NewProject", "ctl00_usrCaption_CustomizationDialogs_DlgNewProject_FormNewProject", null, "AR303000");
                NewProject.DataField = "NewProject";
                ContainerType = "U";
                DataMemberName = "FilterWorkingProject";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Ok {get;private set;}
				public Button Cancel {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Ok = new Button("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_DlgNewProjectButtonOk", "", null, null, "AR303000");
                    Cancel = new Button("ctl00_usrCaption_CustomizationDialogs_DlgNewProject_DlgNewProjectButtonCancel", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_filterworkingproject_formselectproject : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Selector Name {get;set;}
            
            public c_filterworkingproject_formselectproject(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_filterworkingproject_formselectproject(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Ok() {
                ActionClick(Buttons.Ok);
            }
            
            public virtual void Cancel() {
                ActionClick(Buttons.Cancel);
            }
            
            public virtual void New() {
                ActionClick(Buttons.New);
            }
            
            private void Initialize() {
                Name = new Selector("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject_edWP", "Name", "ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_FormSelectProject", null, "AR303000");
                Name.DataField = "Name";
                ContainerType = "U";
                DataMemberName = "FilterWorkingProject";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Ok {get;private set;}
				public Button Cancel {get;private set;}
				public Button New {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Ok = new Button("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_SelectProjectOk", "", null, null, "AR303000");
                    Cancel = new Button("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_SelectProjectCancel", "", null, null, "AR303000");
                    New = new Button("ctl00_usrCaption_CustomizationDialogs_WizardSelectProject_BtnNewProject", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_currentcustomer_tab : Container {
            
			public Input AcctReferenceNbr {get;set;}
			public Selector ParentBAccountID {get;set;}
			public Selector CustomerClassID {get;set;}
			public Selector TermsID {get;set;}
			public Selector StatementCycleId {get;set;}
			public CheckBox AutoApplyPayments {get;set;}
			public CheckBox FinChargeApply {get;set;}
			public CheckBox SmallBalanceAllow {get;set;}
			public Input SmallBalanceLimit {get;set;}
			public Selector CuryID {get;set;}
			public CheckBox AllowOverrideCury {get;set;}
			public Selector CuryRateTypeID {get;set;}
			public CheckBox AllowOverrideRate {get;set;}
			public DropDown CreditRule {get;set;}
			public Input CreditLimit {get;set;}
			public Input CreditDaysPastDue {get;set;}
			public CheckBox IsBillContSameAsMain {get;set;}
			public CheckBox IsBillSameAsMain {get;set;}
			public CheckBox PrintInvoices {get;set;}
			public CheckBox MailInvoices {get;set;}
			public CheckBox PrintStatements {get;set;}
			public CheckBox SendStatementByEmail {get;set;}
			public CheckBox PrintCuryStatements {get;set;}
			public DropDown StatementType {get;set;}
			public Selector DefPaymentMethodID {get;set;}
			public Selector DiscTakenAcctID {get;set;}
			public Selector DiscTakenSubID {get;set;}
			public Selector PrepaymentAcctID {get;set;}
			public Selector PrepaymentSubID {get;set;}
			public Selector COGSAcctID {get;set;}
			public Selector COGSSubID {get;set;}
            
            public c_currentcustomer_tab(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_currentcustomer_tab(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                AcctReferenceNbr = new Input("ctl00_phG_tab_t0_edAcctReferenceNbr", "AcctReferenceNbr", "ctl00_phG_tab", null, "AR303000");
                AcctReferenceNbr.DataField = "AcctReferenceNbr";
                ParentBAccountID = new Selector("ctl00_phG_tab_t0_edParentBAccountID", "ParentBAccountID", "ctl00_phG_tab", null, "AR303000");
                ParentBAccountID.DataField = "ParentBAccountID";
                CustomerClassID = new Selector("ctl00_phG_tab_t0_edCustomerClassID", "CustomerClassID", "ctl00_phG_tab", null, "AR303000");
                CustomerClassID.DataField = "CustomerClassID";
                TermsID = new Selector("ctl00_phG_tab_t0_edTermsID", "TermsID", "ctl00_phG_tab", null, "AR303000");
                TermsID.DataField = "TermsID";
                StatementCycleId = new Selector("ctl00_phG_tab_t0_edStatementCycleId", "StatementCycleId", "ctl00_phG_tab", null, "AR303000");
                StatementCycleId.DataField = "StatementCycleId";
                AutoApplyPayments = new CheckBox("ctl00_phG_tab_t0_chkAutoApplyPayments", "AutoApplyPayments", "ctl00_phG_tab", null, "AR303000");
                AutoApplyPayments.DataField = "AutoApplyPayments";
                FinChargeApply = new CheckBox("ctl00_phG_tab_t0_chkFinChargeApply", "FinChargeApply", "ctl00_phG_tab", null, "AR303000");
                FinChargeApply.DataField = "FinChargeApply";
                SmallBalanceAllow = new CheckBox("ctl00_phG_tab_t0_chkSmallBalanceAllow", "SmallBalanceAllow", "ctl00_phG_tab", null, "AR303000");
                SmallBalanceAllow.DataField = "SmallBalanceAllow";
                SmallBalanceLimit = new Input("ctl00_phG_tab_t0_edSmallBalanceLimit", "SmallBalanceLimit", "ctl00_phG_tab", null, "AR303000");
                SmallBalanceLimit.DataField = "SmallBalanceLimit";
                CuryID = new Selector("ctl00_phG_tab_t0_edCuryID", "CuryID", "ctl00_phG_tab", null, "AR303000");
                CuryID.DataField = "CuryID";
                AllowOverrideCury = new CheckBox("ctl00_phG_tab_t0_chkAllowOverrideCury", "AllowOverrideCury", "ctl00_phG_tab", null, "AR303000");
                AllowOverrideCury.DataField = "AllowOverrideCury";
                CuryRateTypeID = new Selector("ctl00_phG_tab_t0_edCuryRateTypeID", "CuryRateTypeID", "ctl00_phG_tab", null, "AR303000");
                CuryRateTypeID.DataField = "CuryRateTypeID";
                AllowOverrideRate = new CheckBox("ctl00_phG_tab_t0_chkAllowOverrideRate", "AllowOverrideRate", "ctl00_phG_tab", null, "AR303000");
                AllowOverrideRate.DataField = "AllowOverrideRate";
                CreditRule = new DropDown("ctl00_phG_tab_t0_edCreditRule", "CreditRule", "ctl00_phG_tab", null, "AR303000");
                CreditRule.DataField = "CreditRule";
				CreditRule.Items.Add("D","Days Past Due");
				CreditRule.Items.Add("C","Credit Limit");
				CreditRule.Items.Add("B","Limit and Days Past Due");
				CreditRule.Items.Add("N","Disabled");
                CreditLimit = new Input("ctl00_phG_tab_t0_edCreditLimit", "CreditLimit", "ctl00_phG_tab", null, "AR303000");
                CreditLimit.DataField = "CreditLimit";
                CreditDaysPastDue = new Input("ctl00_phG_tab_t0_edCreditDaysPastDue", "CreditDaysPastDue", "ctl00_phG_tab", null, "AR303000");
                CreditDaysPastDue.DataField = "CreditDaysPastDue";
                IsBillContSameAsMain = new CheckBox("ctl00_phG_tab_t1_chkIsBillContSameAsMain", "IsBillContSameAsMain", "ctl00_phG_tab", null, "AR303000");
                IsBillContSameAsMain.DataField = "IsBillContSameAsMain";
                IsBillSameAsMain = new CheckBox("ctl00_phG_tab_t1_chkIsBillSameAsMain", "IsBillSameAsMain", "ctl00_phG_tab", null, "AR303000");
                IsBillSameAsMain.DataField = "IsBillSameAsMain";
                PrintInvoices = new CheckBox("ctl00_phG_tab_t1_chkPrintInvoices", "PrintInvoices", "ctl00_phG_tab", null, "AR303000");
                PrintInvoices.DataField = "PrintInvoices";
                MailInvoices = new CheckBox("ctl00_phG_tab_t1_chkMailInvoices", "MailInvoices", "ctl00_phG_tab", null, "AR303000");
                MailInvoices.DataField = "MailInvoices";
                PrintStatements = new CheckBox("ctl00_phG_tab_t1_chkPrintStatements", "PrintStatements", "ctl00_phG_tab", null, "AR303000");
                PrintStatements.DataField = "PrintStatements";
                SendStatementByEmail = new CheckBox("ctl00_phG_tab_t1_chkSendStatementByEmails", "SendStatementByEmail", "ctl00_phG_tab", null, "AR303000");
                SendStatementByEmail.DataField = "SendStatementByEmail";
                PrintCuryStatements = new CheckBox("ctl00_phG_tab_t1_chkPrintCuryStatements", "PrintCuryStatements", "ctl00_phG_tab", null, "AR303000");
                PrintCuryStatements.DataField = "PrintCuryStatements";
                StatementType = new DropDown("ctl00_phG_tab_t1_edStatementType", "StatementType", "ctl00_phG_tab", null, "AR303000");
                StatementType.DataField = "StatementType";
				StatementType.Items.Add("O","Open Item");
				StatementType.Items.Add("B","Balance Brought Forward");
                DefPaymentMethodID = new Selector("ctl00_phG_tab_t1_edDefPaymentMethodID", "DefPaymentMethodID", "ctl00_phG_tab", null, "AR303000");
                DefPaymentMethodID.DataField = "DefPaymentMethodID";
                DiscTakenAcctID = new Selector("ctl00_phG_tab_t8_edDiscTakenAcctID", "DiscTakenAcctID", "ctl00_phG_tab", null, "AR303000");
                DiscTakenAcctID.DataField = "DiscTakenAcctID";
                DiscTakenSubID = new Selector("ctl00_phG_tab_t8_edDiscTakenSubID", "DiscTakenSubID", "ctl00_phG_tab", null, "AR303000");
                DiscTakenSubID.DataField = "DiscTakenSubID";
                PrepaymentAcctID = new Selector("ctl00_phG_tab_t8_edPrepaymentAcctID", "PrepaymentAcctID", "ctl00_phG_tab", null, "AR303000");
                PrepaymentAcctID.DataField = "PrepaymentAcctID";
                PrepaymentSubID = new Selector("ctl00_phG_tab_t8_edPrepaymentSubID", "PrepaymentSubID", "ctl00_phG_tab", null, "AR303000");
                PrepaymentSubID.DataField = "PrepaymentSubID";
                COGSAcctID = new Selector("ctl00_phG_tab_t8_edCOGSAcctID", "COGSAcctID", "ctl00_phG_tab", null, "AR303000");
                COGSAcctID.DataField = "COGSAcctID";
                COGSSubID = new Selector("ctl00_phG_tab_t8_edCOGSSubID", "COGSSubID", "ctl00_phG_tab", null, "AR303000");
                COGSSubID.DataField = "COGSSubID";
                ContainerType = "U";
                DataMemberName = "CurrentCustomer";
            }
        }
        
        public class c_defaddress_defaddress : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public CheckBox IsValidated {get;set;}
			public Input AddressLine1 {get;set;}
			public Input AddressLine2 {get;set;}
			public Input City {get;set;}
			public Selector CountryID {get;set;}
			public Selector State {get;set;}
			public Input PostalCode {get;set;}
            
            public c_defaddress_defaddress(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_defaddress_defaddress(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void Viewonmap2() {
                ActionClick(Buttons.Viewonmap2);
            }
            
            private void Initialize() {
                IsValidated = new CheckBox("ctl00_phG_tab_t0_DefAddress_edIsValidated", "IsValidated", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                IsValidated.DataField = "IsValidated";
                AddressLine1 = new Input("ctl00_phG_tab_t0_DefAddress_edAddressLine1", "AddressLine1", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                AddressLine1.DataField = "AddressLine1";
                AddressLine2 = new Input("ctl00_phG_tab_t0_DefAddress_edAddressLine2", "AddressLine2", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                AddressLine2.DataField = "AddressLine2";
                City = new Input("ctl00_phG_tab_t0_DefAddress_edCity", "City", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                City.DataField = "City";
                CountryID = new Selector("ctl00_phG_tab_t0_DefAddress_edCountryID", "CountryID", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                CountryID.DataField = "CountryID";
                State = new Selector("ctl00_phG_tab_t0_DefAddress_edState", "State", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                State.DataField = "State";
                PostalCode = new Input("ctl00_phG_tab_t0_DefAddress_edPostalCode", "PostalCode", "ctl00_phG_tab_t0_DefAddress", null, "AR303000");
                PostalCode.DataField = "PostalCode";
                ContainerType = "U";
                DataMemberName = "DefAddress";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button Viewonmap2 {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t0_DefAddress_btnViewMainOnMap", "", null, null, "AR303000");
                    Viewonmap2 = new Button("ctl00_phG_tab_t0_DefAddress_btnViewMainOnMap", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_billaddress_billaddress : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public CheckBox IsValidated {get;set;}
			public Input AddressLine1 {get;set;}
			public Input AddressLine2 {get;set;}
			public Input City {get;set;}
			public Selector CountryID {get;set;}
			public Selector State {get;set;}
			public Input PostalCode {get;set;}
            
            public c_billaddress_billaddress(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_billaddress_billaddress(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void Viewonmap2() {
                ActionClick(Buttons.Viewonmap2);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                IsValidated = new CheckBox("ctl00_phG_tab_t1_BillAddress_edIsValidated", "IsValidated", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                IsValidated.DataField = "IsValidated";
                AddressLine1 = new Input("ctl00_phG_tab_t1_BillAddress_edAddressLine1", "AddressLine1", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                AddressLine1.DataField = "AddressLine1";
                AddressLine2 = new Input("ctl00_phG_tab_t1_BillAddress_edAddressLine2", "AddressLine2", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                AddressLine2.DataField = "AddressLine2";
                City = new Input("ctl00_phG_tab_t1_BillAddress_edCity", "City", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                City.DataField = "City";
                CountryID = new Selector("ctl00_phG_tab_t1_BillAddress_edCountryID", "CountryID", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                CountryID.DataField = "CountryID";
                State = new Selector("ctl00_phG_tab_t1_BillAddress_edState", "State", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                State.DataField = "State";
                PostalCode = new Input("ctl00_phG_tab_t1_BillAddress_edPostalCode", "PostalCode", "ctl00_phG_tab_t1_BillAddress", null, "AR303000");
                PostalCode.DataField = "PostalCode";
                ContainerType = "U";
                DataMemberName = "BillAddress";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button Viewonmap2 {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t1_BillAddress_btnViewBillAddressOnMap", "", null, null, "AR303000");
                    Viewonmap2 = new Button("ctl00_phG_tab_t1_BillAddress_btnViewBillAddressOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_defcontact_defcontact : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Input FullName {get;set;}
			public Input Salutation {get;set;}
			public EmailEdit EMail {get;set;}
			public LinkEdit WebSite {get;set;}
			public Input Phone1 {get;set;}
			public Input Phone2 {get;set;}
			public Input Fax {get;set;}
            
            public c_defcontact_defcontact(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_defcontact_defcontact(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            private void Initialize() {
                FullName = new Input("ctl00_phG_tab_t0_DefContact_edFullName", "FullName", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                FullName.DataField = "FullName";
                Salutation = new Input("ctl00_phG_tab_t0_DefContact_edSalutation", "Salutation", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                Salutation.DataField = "Salutation";
                EMail = new EmailEdit("ctl00_phG_tab_t0_DefContact_edEMail", "EMail", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                EMail.DataField = "EMail";
                WebSite = new LinkEdit("ctl00_phG_tab_t0_DefContact_edWebSite", "WebSite", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                WebSite.DataField = "WebSite";
                Phone1 = new Input("ctl00_phG_tab_t0_DefContact_edPhone1", "Phone1", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                Phone1.DataField = "Phone1";
                Phone2 = new Input("ctl00_phG_tab_t0_DefContact_edPhone2", "Phone2", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                Phone2.DataField = "Phone2";
                Fax = new Input("ctl00_phG_tab_t0_DefContact_edFax", "Fax", "ctl00_phG_tab_t0_DefContact", null, "AR303000");
                Fax.DataField = "Fax";
                ContainerType = "U";
                DataMemberName = "DefContact";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t0_DefAddress_btnViewMainOnMap", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_deflocationcontact_deflocationcontact : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Input FullName {get;set;}
			public Input Salutation {get;set;}
			public EmailEdit EMail {get;set;}
			public LinkEdit WebSite {get;set;}
			public Input Phone1 {get;set;}
			public Input Phone2 {get;set;}
			public Input Fax {get;set;}
            
            public c_deflocationcontact_deflocationcontact(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_deflocationcontact_deflocationcontact(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                FullName = new Input("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edFullName", "FullName", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                FullName.DataField = "FullName";
                Salutation = new Input("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edSalutation", "Salutation", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                Salutation.DataField = "Salutation";
                EMail = new EmailEdit("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edEMail", "EMail", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                EMail.DataField = "EMail";
                WebSite = new LinkEdit("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edWebSite", "WebSite", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                WebSite.DataField = "WebSite";
                Phone1 = new Input("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edPhone1", "Phone1", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                Phone1.DataField = "Phone1";
                Phone2 = new Input("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edPhone2", "Phone2", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                Phone2.DataField = "Phone2";
                Fax = new Input("ctl00_phG_tab_t2_DefLocation_DefLocationContact_edFax", "Fax", "ctl00_phG_tab_t2_DefLocation_DefLocationContact", null, "AR303000");
                Fax.DataField = "Fax";
                ContainerType = "U";
                DataMemberName = "DefLocationContact";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t2_DefLocation_btnViewDefLoactionOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_billcontact_billcontact : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Input FullName {get;set;}
			public Input Salutation {get;set;}
			public Input Phone1 {get;set;}
			public Input Phone2 {get;set;}
			public Input Fax {get;set;}
			public EmailEdit EMail {get;set;}
			public LinkEdit WebSite {get;set;}
            
            public c_billcontact_billcontact(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_billcontact_billcontact(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                FullName = new Input("ctl00_phG_tab_t1_BillContact_edFullName", "FullName", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                FullName.DataField = "FullName";
                Salutation = new Input("ctl00_phG_tab_t1_BillContact_edSalutation", "Salutation", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                Salutation.DataField = "Salutation";
                Phone1 = new Input("ctl00_phG_tab_t1_BillContact_edPhone1", "Phone1", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                Phone1.DataField = "Phone1";
                Phone2 = new Input("ctl00_phG_tab_t1_BillContact_edPhone2", "Phone2", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                Phone2.DataField = "Phone2";
                Fax = new Input("ctl00_phG_tab_t1_BillContact_edFax", "Fax", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                Fax.DataField = "Fax";
                EMail = new EmailEdit("ctl00_phG_tab_t1_BillContact_edEMail", "EMail", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                EMail.DataField = "EMail";
                WebSite = new LinkEdit("ctl00_phG_tab_t1_BillContact_edWebSite", "WebSite", "ctl00_phG_tab_t1_BillContact", null, "AR303000");
                WebSite.DataField = "WebSite";
                ContainerType = "U";
                DataMemberName = "BillContact";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t1_BillAddress_btnViewBillAddressOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_locations_grdlocations : Grid<c_locations_grdlocations.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t3_grdLocations";
            
            private static String _GridName = "Locations_grdLocations";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
            public c_locations_grdlocations(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t3_grdLocations_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t3_grdLocations_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t3_grdLocations_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "Locations";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void NewLocation() {
                ActionClick(ToolBar.NewLocation);
            }
            
            public virtual void CmdViewLocation() {
                ActionClick(ToolBar.CmdViewLocation);
            }
            
            public virtual void SetDefault() {
                ActionClick(ToolBar.SetDefault);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property Files;
                    
                    public c_rule.c_property Notes;
                    
                    public c_rule.c_property LocationBAccountID;
                    
                    public c_rule.c_property LocationID;
                    
                    public c_rule.c_property IsActive;
                    
                    public c_rule.c_property IsDefault;
                    
                    public c_rule.c_property LocationCD;
                    
                    public c_rule.c_property Descr;
                    
                    public c_rule.c_property City;
                    
                    public c_rule.c_property CountryID;
                    
                    public c_rule.c_property State;
                    
                    public c_rule.c_property CTaxZoneID;
                    
                    public c_rule.c_property CPriceClassID;
                    
                    public c_rule.c_property CSalesAcctID;
                    
                    public c_rule.c_property CSalesSubID;
                    
                    public c_fields() {
                        Files = new c_rule.c_property("", "Int32", "PX.Web.UI.PXSelector", 2, "AR303000");
                        Notes = new c_rule.c_property("", "Int32", "PX.Web.UI.PXSelector", 3, "AR303000");
                        LocationBAccountID = new c_rule.c_property("Business Account ID", "Int32", "PX.Web.UI.PXSelector", 4, "AR303000");
                        LocationID = new c_rule.c_property("LocationID", "Int32", "PX.Web.UI.PXTextEdit", 5, "AR303000");
                        IsActive = new c_rule.c_property("Active", "Boolean", "PX.Web.UI.PXCheckBox", 6, "AR303000");
                        IsDefault = new c_rule.c_property("Is Default", "Boolean", "PX.Web.UI.PXCheckBox", 7, "AR303000");
                        LocationCD = new c_rule.c_property("Location ID", "String", "PX.Web.UI.PXSelector", 8, "AR303000");
                        Descr = new c_rule.c_property("Location Name", "String", "PX.Web.UI.PXTextEdit", 9, "AR303000");
                        City = new c_rule.c_property("City", "String", "PX.Web.UI.PXTextEdit", 10, "AR303000");
                        CountryID = new c_rule.c_property("Country", "String", "PX.Web.UI.PXSelector", 11, "AR303000");
                        State = new c_rule.c_property("State", "String", "PX.Web.UI.PXSelector", 12, "AR303000");
                        CTaxZoneID = new c_rule.c_property("Tax Zone", "String", "PX.Web.UI.PXSelector", 13, "AR303000");
                        CPriceClassID = new c_rule.c_property("Price Class ID", "String", "PX.Web.UI.PXSelector", 14, "AR303000");
                        CSalesAcctID = new c_rule.c_property("Sales Account", "String", "PX.Web.UI.PXSelector", 15, "AR303000");
                        CSalesSubID = new c_rule.c_property("Sales Sub.", "String", "PX.Web.UI.PXSelector", 16, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton NewLocation {get;private set;}
				public ToolBarButton CmdViewLocation {get;private set;}
				public ToolBarButton SetDefault {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    NewLocation = new ToolBarButton("css=div[data-cmd='NewLocation']", "NewLocation", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    CmdViewLocation = new ToolBarButton("css=div[data-cmd='cmdViewLocation']", "CmdViewLocation", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    SetDefault = new ToolBarButton("css=div[data-cmd='SetDefault']", "SetDefault", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t3_grdLocations", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public Selector Files {get;set;}
				public Selector Notes {get;set;}
				public Selector LocationBAccountID {get;set;}
				public Input LocationID {get;set;}
				public CheckBox IsActive {get;set;}
				public CheckBox IsDefault {get;set;}
				public Selector LocationCD {get;set;}
				public Input Descr {get;set;}
				public Input City {get;set;}
				public Selector CountryID {get;set;}
				public Selector State {get;set;}
				public Selector CTaxZoneID {get;set;}
				public Selector CPriceClassID {get;set;}
				public Selector CSalesAcctID {get;set;}
				public Selector CSalesSubID {get;set;}
                
                public c_grid_row() {
                    Files = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "", "ctl00_phG_tab_t3_grdLocations", 2, "AR303000");
                    Files.DataField = "";
                    Files.ValueType = "PX.Web.UI.PXSelector";
                    Notes = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "", "ctl00_phG_tab_t3_grdLocations", 3, "AR303000");
                    Notes.DataField = "";
                    Notes.ValueType = "PX.Web.UI.PXSelector";
                    LocationBAccountID = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "Business Account ID", "ctl00_phG_tab_t3_grdLocations", 4, "AR303000");
                    LocationBAccountID.DataField = "LocationBAccountID";
                    LocationBAccountID.ValueType = "PX.Web.UI.PXSelector";
                    LocationID = new Input("ctl00_phG_tab_t3_grdLocations_en", "LocationID", "ctl00_phG_tab_t3_grdLocations", 5, "AR303000");
                    LocationID.DataField = "LocationID";
                    LocationID.ValueType = "PX.Web.UI.PXTextEdit";
                    IsActive = new CheckBox("ctl00_phG_tab_t3_grdLocations_ef", "Active", "ctl00_phG_tab_t3_grdLocations", 6, "AR303000");
                    IsActive.DataField = "IsActive";
                    IsActive.ValueType = "PX.Web.UI.PXCheckBox";
                    IsDefault = new CheckBox("ctl00_phG_tab_t3_grdLocations_ef", "Is Default", "ctl00_phG_tab_t3_grdLocations", 7, "AR303000");
                    IsDefault.DataField = "IsDefault";
                    IsDefault.ValueType = "PX.Web.UI.PXCheckBox";
                    LocationCD = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_edLocationCD", "Location ID", "ctl00_phG_tab_t3_grdLocations", 8, "AR303000");
                    LocationCD.DataField = "LocationCD";
                    LocationCD.ValueType = "PX.Web.UI.PXSelector";
                    Descr = new Input("ctl00_phG_tab_t3_grdLocations_ei", "Location Name", "ctl00_phG_tab_t3_grdLocations", 9, "AR303000");
                    Descr.DataField = "Descr";
                    Descr.ValueType = "PX.Web.UI.PXTextEdit";
                    City = new Input("ctl00_phG_tab_t3_grdLocations_ei", "City", "ctl00_phG_tab_t3_grdLocations", 10, "AR303000");
                    City.DataField = "City";
                    City.ValueType = "PX.Web.UI.PXTextEdit";
                    CountryID = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "Country", "ctl00_phG_tab_t3_grdLocations", 11, "AR303000");
                    CountryID.DataField = "CountryID";
                    CountryID.ValueType = "PX.Web.UI.PXSelector";
                    State = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "State", "ctl00_phG_tab_t3_grdLocations", 12, "AR303000");
                    State.DataField = "State";
                    State.ValueType = "PX.Web.UI.PXSelector";
                    CTaxZoneID = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "Tax Zone", "ctl00_phG_tab_t3_grdLocations", 13, "AR303000");
                    CTaxZoneID.DataField = "CTaxZoneID";
                    CTaxZoneID.ValueType = "PX.Web.UI.PXSelector";
                    CPriceClassID = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_edCPriceClassID", "Price Class ID", "ctl00_phG_tab_t3_grdLocations", 14, "AR303000");
                    CPriceClassID.DataField = "CPriceClassID";
                    CPriceClassID.ValueType = "PX.Web.UI.PXSelector";
                    CSalesAcctID = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "Sales Account", "ctl00_phG_tab_t3_grdLocations", 15, "AR303000");
                    CSalesAcctID.DataField = "CSalesAcctID";
                    CSalesAcctID.ValueType = "PX.Web.UI.PXSelector";
                    CSalesSubID = new Selector("_ctl00_phG_tab_t3_grdLocations_lv0_es", "Sales Sub.", "ctl00_phG_tab_t3_grdLocations", 16, "AR303000");
                    CSalesSubID.DataField = "CSalesSubID";
                    CSalesSubID.ValueType = "PX.Web.UI.PXSelector";
                }
            }
        }
        
        public class c_locations_lv0 : Container {
            
			public Selector LocationCD {get;set;}
			public Selector CPriceClassID {get;set;}
			public Selector Es {get;set;}
			public Selector Em {get;set;}
            
            public c_locations_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_locations_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                LocationCD = new Selector("ctl00_phG_tab_t3_grdLocations_lv0_edLocationCD", "LocationCD", "ctl00_phG_tab_t3_grdLocations_lv0", null, "AR303000");
                LocationCD.DataField = "LocationCD";
                CPriceClassID = new Selector("ctl00_phG_tab_t3_grdLocations_lv0_edCPriceClassID", "CPriceClassID", "ctl00_phG_tab_t3_grdLocations_lv0", null, "AR303000");
                CPriceClassID.DataField = "CPriceClassID";
                Es = new Selector("ctl00_phG_tab_t3_grdLocations_lv0_es", "Es", "ctl00_phG_tab_t3_grdLocations_lv0", null, "AR303000");
                Es.DataField = "";
                Em = new Selector("ctl00_phG_tab_t3_grdLocations_lv0_em", "Em", "ctl00_phG_tab_t3_grdLocations_lv0", null, "AR303000");
                Em.DataField = "";
                ContainerType = "U";
                DataMemberName = "Locations";
            }
        }
        
        public class c_deflocation_deflocationaccount : Container {
            
			public Selector CARAccountID {get;set;}
			public Selector CARSubID {get;set;}
			public Selector CSalesAcctID {get;set;}
			public Selector CSalesSubID {get;set;}
			public Selector CDiscountAcctID {get;set;}
			public Selector CDiscountSubID {get;set;}
			public Selector CFreightAcctID {get;set;}
			public Selector CFreightSubID {get;set;}
            
            public c_deflocation_deflocationaccount(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_deflocation_deflocationaccount(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                CARAccountID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCARAccountID", "CARAccountID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CARAccountID.DataField = "CARAccountID";
                CARSubID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCARSubID", "CARSubID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CARSubID.DataField = "CARSubID";
                CSalesAcctID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCSalesAcctID", "CSalesAcctID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CSalesAcctID.DataField = "CSalesAcctID";
                CSalesSubID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCSalesSubID", "CSalesSubID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CSalesSubID.DataField = "CSalesSubID";
                CDiscountAcctID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCDiscountAcctID", "CDiscountAcctID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CDiscountAcctID.DataField = "CDiscountAcctID";
                CDiscountSubID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCDiscountSubID", "CDiscountSubID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CDiscountSubID.DataField = "CDiscountSubID";
                CFreightAcctID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCFreightAcctID", "CFreightAcctID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CFreightAcctID.DataField = "CFreightAcctID";
                CFreightSubID = new Selector("ctl00_phG_tab_t8_DefLocationAccount_edCFreightSubID", "CFreightSubID", "ctl00_phG_tab_t8_DefLocationAccount", null, "AR303000");
                CFreightSubID.DataField = "CFreightSubID";
                ContainerType = "U";
                DataMemberName = "DefLocation";
            }
        }
        
        public class c_deflocation_deflocation : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public CheckBox IsContactSameAsMain {get;set;}
			public CheckBox IsAddressSameAsMain {get;set;}
			public CheckBox IsValidated {get;set;}
			public Input AddressLine1 {get;set;}
			public Input AddressLine2 {get;set;}
			public Input City {get;set;}
			public Selector CountryID {get;set;}
			public Selector State {get;set;}
			public Input PostalCode {get;set;}
			public Input Descr {get;set;}
			public Input TaxRegistrationID {get;set;}
			public Selector CTaxZoneID {get;set;}
			public DropDown CAvalaraCustomerUsageType {get;set;}
			public Selector CBranchID {get;set;}
			public Selector CPriceClassID {get;set;}
			public Selector CSiteID {get;set;}
			public Selector CCarrierID {get;set;}
			public Selector CShipTermsID {get;set;}
			public Selector CShipZoneID {get;set;}
			public Selector CFOBPointID {get;set;}
			public CheckBox CResedential {get;set;}
			public CheckBox CSaturdayDelivery {get;set;}
			public CheckBox CInsurance {get;set;}
			public DropDown CShipComplete {get;set;}
			public Input COrderPriority {get;set;}
			public Input CLeadTime {get;set;}
            
            public c_deflocation_deflocation(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_deflocation_deflocation(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void Viewonmap2() {
                ActionClick(Buttons.Viewonmap2);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                IsContactSameAsMain = new CheckBox("ctl00_phG_tab_t2_DefLocation_chkIsContactSameAsMain", "IsContactSameAsMain", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                IsContactSameAsMain.DataField = "IsContactSameAsMain";
                IsAddressSameAsMain = new CheckBox("ctl00_phG_tab_t2_DefLocation_chkIsMain", "IsAddressSameAsMain", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                IsAddressSameAsMain.DataField = "IsAddressSameAsMain";
                IsValidated = new CheckBox("ctl00_phG_tab_t2_DefLocation_edIsValidated", "IsValidated", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                IsValidated.DataField = "IsValidated";
                AddressLine1 = new Input("ctl00_phG_tab_t2_DefLocation_edAddressLine1", "AddressLine1", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                AddressLine1.DataField = "AddressLine1";
                AddressLine2 = new Input("ctl00_phG_tab_t2_DefLocation_edAddressLine2", "AddressLine2", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                AddressLine2.DataField = "AddressLine2";
                City = new Input("ctl00_phG_tab_t2_DefLocation_edCity", "City", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                City.DataField = "City";
                CountryID = new Selector("ctl00_phG_tab_t2_DefLocation_edCountryID", "CountryID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CountryID.DataField = "CountryID";
                State = new Selector("ctl00_phG_tab_t2_DefLocation_edState", "State", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                State.DataField = "State";
                PostalCode = new Input("ctl00_phG_tab_t2_DefLocation_edPostalCode", "PostalCode", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                PostalCode.DataField = "PostalCode";
                Descr = new Input("ctl00_phG_tab_t2_DefLocation_edDescr", "Descr", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                Descr.DataField = "Descr";
                TaxRegistrationID = new Input("ctl00_phG_tab_t2_DefLocation_edTaxRegistrationID", "TaxRegistrationID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                TaxRegistrationID.DataField = "TaxRegistrationID";
                CTaxZoneID = new Selector("ctl00_phG_tab_t2_DefLocation_edCTaxZoneID", "CTaxZoneID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CTaxZoneID.DataField = "CTaxZoneID";
                CAvalaraCustomerUsageType = new DropDown("ctl00_phG_tab_t2_DefLocation_edCAvalaraCustomerUsageType", "CAvalaraCustomerUsageType", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CAvalaraCustomerUsageType.DataField = "CAvalaraCustomerUsageType";
				CAvalaraCustomerUsageType.Items.Add("A","Federal Government");
				CAvalaraCustomerUsageType.Items.Add("B","State/Local Govt.");
				CAvalaraCustomerUsageType.Items.Add("C","Tribal Government");
				CAvalaraCustomerUsageType.Items.Add("D","Foreign Diplomat");
				CAvalaraCustomerUsageType.Items.Add("E","Charitable Organization");
				CAvalaraCustomerUsageType.Items.Add("F","Religious/Education");
				CAvalaraCustomerUsageType.Items.Add("G","Resale");
				CAvalaraCustomerUsageType.Items.Add("H","Agricultural Production");
				CAvalaraCustomerUsageType.Items.Add("I","Industrial Prod/Mfg.");
				CAvalaraCustomerUsageType.Items.Add("J","Direct Pay Permit");
				CAvalaraCustomerUsageType.Items.Add("K","Direct Mail");
				CAvalaraCustomerUsageType.Items.Add("L","Other");
				CAvalaraCustomerUsageType.Items.Add("N","Local Governament");
				CAvalaraCustomerUsageType.Items.Add("P","Commercial Aquaculture");
				CAvalaraCustomerUsageType.Items.Add("Q","Commercial Fishery");
				CAvalaraCustomerUsageType.Items.Add("R","Non-resident");
                CBranchID = new Selector("ctl00_phG_tab_t2_DefLocation_edCBranchID", "CBranchID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CBranchID.DataField = "CBranchID";
                CPriceClassID = new Selector("ctl00_phG_tab_t2_DefLocation_edCPriceClassID", "CPriceClassID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CPriceClassID.DataField = "CPriceClassID";
                CSiteID = new Selector("ctl00_phG_tab_t2_DefLocation_edCSiteID", "CSiteID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CSiteID.DataField = "CSiteID";
                CCarrierID = new Selector("ctl00_phG_tab_t2_DefLocation_edCarrierID", "CCarrierID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CCarrierID.DataField = "CCarrierID";
                CShipTermsID = new Selector("ctl00_phG_tab_t2_DefLocation_edShipTermsID", "CShipTermsID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CShipTermsID.DataField = "CShipTermsID";
                CShipZoneID = new Selector("ctl00_phG_tab_t2_DefLocation_edShipZoneID", "CShipZoneID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CShipZoneID.DataField = "CShipZoneID";
                CFOBPointID = new Selector("ctl00_phG_tab_t2_DefLocation_edFOBPointID", "CFOBPointID", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CFOBPointID.DataField = "CFOBPointID";
                CResedential = new CheckBox("ctl00_phG_tab_t2_DefLocation_chkResedential", "CResedential", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CResedential.DataField = "CResedential";
                CSaturdayDelivery = new CheckBox("ctl00_phG_tab_t2_DefLocation_chkSaturdayDelivery", "CSaturdayDelivery", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CSaturdayDelivery.DataField = "CSaturdayDelivery";
                CInsurance = new CheckBox("ctl00_phG_tab_t2_DefLocation_chkInsurance", "CInsurance", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CInsurance.DataField = "CInsurance";
                CShipComplete = new DropDown("ctl00_phG_tab_t2_DefLocation_edCShipComplete", "CShipComplete", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CShipComplete.DataField = "CShipComplete";
				CShipComplete.Items.Add("C","Ship Complete");
				CShipComplete.Items.Add("B","Back Order Allowed");
				CShipComplete.Items.Add("L","Cancel Remainder");
                COrderPriority = new Input("ctl00_phG_tab_t2_DefLocation_edCOrderPriority", "COrderPriority", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                COrderPriority.DataField = "COrderPriority";
                CLeadTime = new Input("ctl00_phG_tab_t2_DefLocation_edLeadTime", "CLeadTime", "ctl00_phG_tab_t2_DefLocation", null, "AR303000");
                CLeadTime.DataField = "CLeadTime";
                ContainerType = "U";
                DataMemberName = "DefLocation";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button Viewonmap2 {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t2_DefLocation_btnViewDefLoactionOnMap", "", null, null, "AR303000");
                    Viewonmap2 = new Button("ctl00_phG_tab_t2_DefLocation_btnViewDefLoactionOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_extcontacts_grdcontacts : Grid<c_extcontacts_grdcontacts.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t5_grdContacts";
            
            private static String _GridName = "ExtContacts_grdContacts";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
            public c_extcontacts_grdcontacts(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t5_grdContacts_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t5_grdContacts_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t5_grdContacts_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "ExtContacts";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void NewContact() {
                ActionClick(ToolBar.NewContact);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property Files;
                    
                    public c_rule.c_property Notes;
                    
                    public c_rule.c_property ContactBAccountID;
                    
                    public c_rule.c_property ContactID;
                    
                    public c_rule.c_property IsActive;
                    
                    public c_rule.c_property Salutation;
                    
                    public c_rule.c_property ContactDisplayName;
                    
                    public c_rule.c_property City;
                    
                    public c_rule.c_property EMail;
                    
                    public c_rule.c_property Phone1;
                    
                    public c_fields() {
                        Files = new c_rule.c_property("", "Int32", "PX.Web.UI.PXSelector", 2, "AR303000");
                        Notes = new c_rule.c_property("", "Int32", "PX.Web.UI.PXSelector", 3, "AR303000");
                        ContactBAccountID = new c_rule.c_property("Business Account ID", "Int32", "PX.Web.UI.PXTextEdit", 4, "AR303000");
                        ContactID = new c_rule.c_property("ContactID", "Int32", "PX.Web.UI.PXTextEdit", 5, "AR303000");
                        IsActive = new c_rule.c_property("Active", "Boolean", "PX.Web.UI.PXCheckBox", 6, "AR303000");
                        Salutation = new c_rule.c_property("Position", "String", "PX.Web.UI.PXTextEdit", 7, "AR303000");
                        ContactDisplayName = new c_rule.c_property("Name", "String", "PX.Web.UI.PXSelector", 8, "AR303000");
                        City = new c_rule.c_property("City", "String", "PX.Web.UI.PXTextEdit", 9, "AR303000");
                        EMail = new c_rule.c_property("Email", "String", "PX.Web.UI.PXTextEdit", 10, "AR303000");
                        Phone1 = new c_rule.c_property("Phone 1", "String", "PX.Web.UI.PXTextEdit", 11, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton NewContact {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    NewContact = new ToolBarButton("css=div[data-cmd='NewContact']", "NewContact", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t5_grdContacts", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public Selector Files {get;set;}
				public Selector Notes {get;set;}
				public Input ContactBAccountID {get;set;}
				public Input ContactID {get;set;}
				public CheckBox IsActive {get;set;}
				public Input Salutation {get;set;}
				public Selector ContactDisplayName {get;set;}
				public Input City {get;set;}
				public Input EMail {get;set;}
				public Input Phone1 {get;set;}
                
                public c_grid_row() {
                    Files = new Selector("_ctl00_phG_tab_t5_grdContacts_lv0_es", "", "ctl00_phG_tab_t5_grdContacts", 2, "AR303000");
                    Files.DataField = "";
                    Files.ValueType = "PX.Web.UI.PXSelector";
                    Notes = new Selector("_ctl00_phG_tab_t5_grdContacts_lv0_es", "", "ctl00_phG_tab_t5_grdContacts", 3, "AR303000");
                    Notes.DataField = "";
                    Notes.ValueType = "PX.Web.UI.PXSelector";
                    ContactBAccountID = new Input("ctl00_phG_tab_t5_grdContacts_en", "Business Account ID", "ctl00_phG_tab_t5_grdContacts", 4, "AR303000");
                    ContactBAccountID.DataField = "ContactBAccountID";
                    ContactBAccountID.ValueType = "PX.Web.UI.PXTextEdit";
                    ContactID = new Input("ctl00_phG_tab_t5_grdContacts_en", "ContactID", "ctl00_phG_tab_t5_grdContacts", 5, "AR303000");
                    ContactID.DataField = "ContactID";
                    ContactID.ValueType = "PX.Web.UI.PXTextEdit";
                    IsActive = new CheckBox("ctl00_phG_tab_t5_grdContacts_ef", "Active", "ctl00_phG_tab_t5_grdContacts", 6, "AR303000");
                    IsActive.DataField = "IsActive";
                    IsActive.ValueType = "PX.Web.UI.PXCheckBox";
                    Salutation = new Input("ctl00_phG_tab_t5_grdContacts_ei", "Position", "ctl00_phG_tab_t5_grdContacts", 7, "AR303000");
                    Salutation.DataField = "Salutation";
                    Salutation.ValueType = "PX.Web.UI.PXTextEdit";
                    ContactDisplayName = new Selector("_ctl00_phG_tab_t5_grdContacts_lv0_es", "Name", "ctl00_phG_tab_t5_grdContacts", 8, "AR303000");
                    ContactDisplayName.DataField = "ContactDisplayName";
                    ContactDisplayName.ValueType = "PX.Web.UI.PXSelector";
                    City = new Input("ctl00_phG_tab_t5_grdContacts_ei", "City", "ctl00_phG_tab_t5_grdContacts", 9, "AR303000");
                    City.DataField = "City";
                    City.ValueType = "PX.Web.UI.PXTextEdit";
                    EMail = new Input("ctl00_phG_tab_t5_grdContacts_ei", "Email", "ctl00_phG_tab_t5_grdContacts", 10, "AR303000");
                    EMail.DataField = "EMail";
                    EMail.ValueType = "PX.Web.UI.PXTextEdit";
                    Phone1 = new Input("ctl00_phG_tab_t5_grdContacts_ei", "Phone 1", "ctl00_phG_tab_t5_grdContacts", 11, "AR303000");
                    Phone1.DataField = "Phone1";
                    Phone1.ValueType = "PX.Web.UI.PXTextEdit";
                }
            }
        }
        
        public class c_extcontacts_lv0 : Container {
            
			public Selector Es {get;set;}
            
            public c_extcontacts_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_extcontacts_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                Es = new Selector("ctl00_phG_tab_t5_grdContacts_lv0_es", "Es", "ctl00_phG_tab_t5_grdContacts_lv0", null, "AR303000");
                Es.DataField = "";
                ContainerType = "U";
                DataMemberName = "ExtContacts";
            }
        }
        
        public class c_salespersons_pxgrid1 : Grid<c_salespersons_pxgrid1.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t6_PXGrid1";
            
            private static String _GridName = "SalesPersons_PXGrid1";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
		    public virtual void New()
		    {
			    if(ToolBar.New.IsEnabled())
			    {
				    ToolBar.New.ClickAndWait();
				    if (Browser.GetBrowser().Alert != null)
				    {
 					    throw new Exception("ALERT: " + Browser.GetBrowser().Alert.Message); 
				    }
			    }
		    }
            
            public c_salespersons_pxgrid1(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t6_PXGrid1_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t6_PXGrid1_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t6_PXGrid1_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "SalesPersons";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void Delete() {
                ActionClick(ToolBar.Delete);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property SalesPersonID;
                    
                    public c_rule.c_property SalesPersonID_SalesPerson_descr;
                    
                    public c_rule.c_property LocationID;
                    
                    public c_rule.c_property LocationID_description;
                    
                    public c_rule.c_property CommisionPct;
                    
                    public c_rule.c_property IsDefault;
                    
                    public c_fields() {
                        SalesPersonID = new c_rule.c_property("Salesperson ID", "String", "PX.Web.UI.PXSegmentMask", 2, "AR303000");
                        SalesPersonID_SalesPerson_descr = new c_rule.c_property("Name", "String", "PX.Web.UI.PXTextEdit", 3, "AR303000");
                        LocationID = new c_rule.c_property("Location ID", "String", "PX.Web.UI.PXSegmentMask", 4, "AR303000");
                        LocationID_description = new c_rule.c_property("Location Name", "String", "PX.Web.UI.PXTextEdit", 5, "AR303000");
                        CommisionPct = new c_rule.c_property("Commission %", "Decimal", "PX.Web.UI.PXNumberEdit", 6, "AR303000");
                        IsDefault = new c_rule.c_property("Default", "Boolean", "PX.Web.UI.PXCheckBox", 7, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton New {get;private set;}
				public ToolBarButton Delete {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    New = new ToolBarButton("css=div[data-cmd='AddNew']", "New", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    Delete = new ToolBarButton("css=div[data-cmd='Delete']", "Delete", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t6_PXGrid1", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public Selector SalesPersonID {get;set;}
				public Input SalesPersonID_SalesPerson_descr {get;set;}
				public Selector LocationID {get;set;}
				public Input LocationID_description {get;set;}
				public Input CommisionPct {get;set;}
				public CheckBox IsDefault {get;set;}
                
                public c_grid_row() {
                    SalesPersonID = new Selector("_ctl00_phG_tab_t6_PXGrid1_lv0_edSalesPersonID", "Salesperson ID", "ctl00_phG_tab_t6_PXGrid1", 2, "AR303000");
                    SalesPersonID.DataField = "SalesPersonID";
                    SalesPersonID.ValueType = "PX.Web.UI.PXSegmentMask";
                    SalesPersonID_SalesPerson_descr = new Input("ctl00_phG_tab_t6_PXGrid1_ei", "Name", "ctl00_phG_tab_t6_PXGrid1", 3, "AR303000");
                    SalesPersonID_SalesPerson_descr.DataField = "SalesPersonID_SalesPerson_descr";
                    SalesPersonID_SalesPerson_descr.ValueType = "PX.Web.UI.PXTextEdit";
                    LocationID = new Selector("_ctl00_phG_tab_t6_PXGrid1_lv0_edLocationID", "Location ID", "ctl00_phG_tab_t6_PXGrid1", 4, "AR303000");
                    LocationID.DataField = "LocationID";
                    LocationID.ValueType = "PX.Web.UI.PXSegmentMask";
                    LocationID_description = new Input("_ctl00_phG_tab_t6_PXGrid1_lv0_edLocation_descr", "Location Name", "ctl00_phG_tab_t6_PXGrid1", 5, "AR303000");
                    LocationID_description.DataField = "LocationID_description";
                    LocationID_description.ValueType = "PX.Web.UI.PXTextEdit";
                    CommisionPct = new Input("_ctl00_phG_tab_t6_PXGrid1_lv0_edCommisionPct", "Commission %", "ctl00_phG_tab_t6_PXGrid1", 6, "AR303000");
                    CommisionPct.DataField = "CommisionPct";
                    CommisionPct.ValueType = "PX.Web.UI.PXNumberEdit";
                    IsDefault = new CheckBox("ctl00_phG_tab_t6_PXGrid1_ef", "Default", "ctl00_phG_tab_t6_PXGrid1", 7, "AR303000");
                    IsDefault.DataField = "IsDefault";
                    IsDefault.ValueType = "PX.Web.UI.PXCheckBox";
                }
            }
        }
        
        public class c_salespersons_lv0 : Container {
            
			public Selector SalesPersonID {get;set;}
			public Selector LocationID {get;set;}
			public Input LocationID_description {get;set;}
			public Input CommisionPct {get;set;}
			public Selector Es {get;set;}
            
            public c_salespersons_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_salespersons_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                SalesPersonID = new Selector("ctl00_phG_tab_t6_PXGrid1_lv0_edSalesPersonID", "SalesPersonID", "ctl00_phG_tab_t6_PXGrid1_lv0", null, "AR303000");
                SalesPersonID.DataField = "SalesPersonID";
                LocationID = new Selector("ctl00_phG_tab_t6_PXGrid1_lv0_edLocationID", "LocationID", "ctl00_phG_tab_t6_PXGrid1_lv0", null, "AR303000");
                LocationID.DataField = "LocationID";
                LocationID_description = new Input("ctl00_phG_tab_t6_PXGrid1_lv0_edLocation_descr", "LocationID_description", "ctl00_phG_tab_t6_PXGrid1_lv0", null, "AR303000");
                LocationID_description.DataField = "LocationID_description";
                CommisionPct = new Input("ctl00_phG_tab_t6_PXGrid1_lv0_edCommisionPct", "CommisionPct", "ctl00_phG_tab_t6_PXGrid1_lv0", null, "AR303000");
                CommisionPct.DataField = "CommisionPct";
                Es = new Selector("ctl00_phG_tab_t6_PXGrid1_lv0_es", "Es", "ctl00_phG_tab_t6_PXGrid1_lv0", null, "AR303000");
                Es.DataField = "";
                ContainerType = "U";
                DataMemberName = "SalesPersons";
            }
        }
        
        public class c_customerbalance_customerbalance : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Input UnreleasedBalance {get;set;}
			public Input OpenOrdersBalance {get;set;}
			public Input RemainingCreditLimit {get;set;}
			public DateSelector OldInvoiceDate {get;set;}
			public Input Balance {get;set;}
			public Input SignedDepositsBalance {get;set;}
            
            public c_customerbalance_customerbalance(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_customerbalance_customerbalance(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            private void Initialize() {
                UnreleasedBalance = new Input("ctl00_phG_tab_t0_CustomerBalance_edUnreleasedBalance", "UnreleasedBalance", "ctl00_phG_tab_t0_CustomerBalance", null, "AR303000");
                UnreleasedBalance.DataField = "UnreleasedBalance";
                OpenOrdersBalance = new Input("ctl00_phG_tab_t0_CustomerBalance_edOpenOrdersBalance", "OpenOrdersBalance", "ctl00_phG_tab_t0_CustomerBalance", null, "AR303000");
                OpenOrdersBalance.DataField = "OpenOrdersBalance";
                RemainingCreditLimit = new Input("ctl00_phG_tab_t0_CustomerBalance_edRemainingCreditLimit", "RemainingCreditLimit", "ctl00_phG_tab_t0_CustomerBalance", null, "AR303000");
                RemainingCreditLimit.DataField = "RemainingCreditLimit";
                OldInvoiceDate = new DateSelector("ctl00_phG_tab_t0_CustomerBalance_edOldInvoiceDate", "OldInvoiceDate", "ctl00_phG_tab_t0_CustomerBalance", null, "AR303000");
                OldInvoiceDate.DataField = "OldInvoiceDate";
                Balance = new Input("ctl00_phF_BAccount_CustomerBalance_edBalance", "Balance", "ctl00_phG_tab_t0_CustomerBalance", null, "AR303000");
                Balance.DataField = "Balance";
                SignedDepositsBalance = new Input("ctl00_phF_BAccount_CustomerBalance_edSignedDepositsBalance", "SignedDepositsBalance", "ctl00_phG_tab_t0_CustomerBalance", null, "AR303000");
                SignedDepositsBalance.DataField = "SignedDepositsBalance";
                ContainerType = "U";
                DataMemberName = "CustomerBalance";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t0_DefAddress_btnViewMainOnMap", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_carriers_pxgridaccounts : Grid<c_carriers_pxgridaccounts.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t2_DefLocation_PXGridAccounts";
            
            private static String _GridName = "Carriers_PXGridAccounts";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public PxButtonCollection Buttons {get;set;} //;
            
		    public virtual void New()
		    {
			    if(ToolBar.New.IsEnabled())
			    {
				    ToolBar.New.ClickAndWait();
				    if (Browser.GetBrowser().Alert != null)
				    {
 					    throw new Exception("ALERT: " + Browser.GetBrowser().Alert.Message); 
				    }
			    }
		    }
            
            public c_carriers_pxgridaccounts(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContainerType = "U";
                DataMemberName = "Carriers";
                Buttons = new PxButtonCollection();
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void Delete() {
                ActionClick(ToolBar.Delete);
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property IsActive;
                    
                    public c_rule.c_property CarrierPluginID;
                    
                    public c_rule.c_property CarrierAccount;
                    
                    public c_rule.c_property PostalCode;
                    
                    public c_rule.c_property RecordID;
                    
                    public c_fields() {
                        IsActive = new c_rule.c_property("Active", "Boolean", "PX.Web.UI.PXCheckBox", 2, "AR303000");
                        CarrierPluginID = new c_rule.c_property("Carrier", "String", "PX.Web.UI.PXSelector", 3, "AR303000");
                        CarrierAccount = new c_rule.c_property("Carrier Account", "String", "PX.Web.UI.PXTextEdit", 4, "AR303000");
                        PostalCode = new c_rule.c_property("Postal Code", "String", "PX.Web.UI.PXTextEdit", 5, "AR303000");
                        RecordID = new c_rule.c_property("RecordID", "Int32", "PX.Web.UI.PXTextEdit", 6, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton New {get;private set;}
				public ToolBarButton Delete {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                    New = new ToolBarButton("css=div[data-cmd='AddNew']", "New", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                    Delete = new ToolBarButton("css=div[data-cmd='Delete']", "Delete", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                }
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t2_DefLocation_btnViewDefLoactionOnMap", "", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                    First = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfFirst0", "", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfPrev0", "", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfNext0", "", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfLast0", "", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public CheckBox IsActive {get;set;}
				public Selector CarrierPluginID {get;set;}
				public Input CarrierAccount {get;set;}
				public Input PostalCode {get;set;}
				public Input RecordID {get;set;}
                
                public c_grid_row() {
                    IsActive = new CheckBox("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_ef", "Active", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", 2, "AR303000");
                    IsActive.DataField = "IsActive";
                    IsActive.ValueType = "PX.Web.UI.PXCheckBox";
                    CarrierPluginID = new Selector("_ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0_es", "Carrier", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", 3, "AR303000");
                    CarrierPluginID.DataField = "CarrierPluginID";
                    CarrierPluginID.ValueType = "PX.Web.UI.PXSelector";
                    CarrierAccount = new Input("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_ei", "Carrier Account", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", 4, "AR303000");
                    CarrierAccount.DataField = "CarrierAccount";
                    CarrierAccount.ValueType = "PX.Web.UI.PXTextEdit";
                    PostalCode = new Input("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_ei", "Postal Code", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", 5, "AR303000");
                    PostalCode.DataField = "PostalCode";
                    PostalCode.ValueType = "PX.Web.UI.PXTextEdit";
                    RecordID = new Input("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_en", "RecordID", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts", 6, "AR303000");
                    RecordID.DataField = "RecordID";
                    RecordID.ValueType = "PX.Web.UI.PXTextEdit";
                }
            }
        }
        
        public class c_carriers_lv0 : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Selector Es {get;set;}
			public DateSelector Ed {get;set;}
			public DropDown Ec {get;set;}
			public Selector Em {get;set;}
            
            public c_carriers_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_carriers_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                Es = new Selector("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0_es", "Es", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0", null, "AR303000");
                Es.DataField = "";
                Ed = new DateSelector("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0_ed", "Ed", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0", null, "AR303000");
                Ed.DataField = "";
                Ec = new DropDown("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0_ec", "Ec", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0", null, "AR303000");
                Ec.DataField = "";
                Em = new Selector("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0_em", "Em", "ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lv0", null, "AR303000");
                Em.DataField = "";
                ContainerType = "U";
                DataMemberName = "Carriers";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t2_DefLocation_btnViewDefLoactionOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t2_DefLocation_PXGridAccounts_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_defpaymentmethodinstance_defpaymentmethodinstance : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Selector CCProcessingCenterID {get;set;}
			public Selector CustomerCCPID {get;set;}
			public Selector CashAccountID {get;set;}
			public Input Descr {get;set;}
            
            public c_defpaymentmethodinstance_defpaymentmethodinstance(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_defpaymentmethodinstance_defpaymentmethodinstance(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                CCProcessingCenterID = new Selector("ctl00_phG_tab_t1_DefPaymentMethodInstance_edProcessingCenter", "CCProcessingCenterID", "ctl00_phG_tab_t1_DefPaymentMethodInstance", null, "AR303000");
                CCProcessingCenterID.DataField = "CCProcessingCenterID";
                CustomerCCPID = new Selector("ctl00_phG_tab_t1_DefPaymentMethodInstance_edCustomerCCPID", "CustomerCCPID", "ctl00_phG_tab_t1_DefPaymentMethodInstance", null, "AR303000");
                CustomerCCPID.DataField = "CustomerCCPID";
                CashAccountID = new Selector("ctl00_phG_tab_t1_DefPaymentMethodInstance_edCashAccountID", "CashAccountID", "ctl00_phG_tab_t1_DefPaymentMethodInstance", null, "AR303000");
                CashAccountID.DataField = "CashAccountID";
                Descr = new Input("ctl00_phG_tab_t1_DefPaymentMethodInstance_edDescr", "Descr", "ctl00_phG_tab_t1_DefPaymentMethodInstance", null, "AR303000");
                Descr.DataField = "Descr";
                ContainerType = "U";
                DataMemberName = "DefPaymentMethodInstance";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t1_BillAddress_btnViewBillAddressOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_paymentmethods_lv0 : Container {
            
			public Selector Es {get;set;}
            
            public c_paymentmethods_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_paymentmethods_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                Es = new Selector("ctl00_phG_tab_t4_grdPaymentMethods_lv0_es", "Es", "ctl00_phG_tab_t4_grdPaymentMethods_lv0", null, "AR303000");
                Es.DataField = "";
                ContainerType = "U";
                DataMemberName = "PaymentMethods";
            }
        }
        
        public class c_paymentmethods_grdpaymentmethods : Grid<c_paymentmethods_grdpaymentmethods.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t4_grdPaymentMethods";
            
            private static String _GridName = "PaymentMethods_grdPaymentMethods";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
            public c_paymentmethods_grdpaymentmethods(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t4_grdPaymentMethods_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t4_grdPaymentMethods_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t4_grdPaymentMethods_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "PaymentMethods";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void AddPaymentMethod() {
                ActionClick(ToolBar.AddPaymentMethod);
            }
            
            public virtual void CmdViewPaymentMethod() {
                ActionClick(ToolBar.CmdViewPaymentMethod);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property IsDefault;
                    
                    public c_rule.c_property PaymentMethodID;
                    
                    public c_rule.c_property Descr;
                    
                    public c_rule.c_property CashAccountID;
                    
                    public c_rule.c_property IsActive;
                    
                    public c_rule.c_property IsCustomerPaymentMethod;
                    
                    public c_rule.c_property PMInstanceID;
                    
                    public c_fields() {
                        IsDefault = new c_rule.c_property("Is Default", "Boolean", "PX.Web.UI.PXCheckBox", 2, "AR303000");
                        PaymentMethodID = new c_rule.c_property("Payment Method", "String", "PX.Web.UI.PXTextEdit", 3, "AR303000");
                        Descr = new c_rule.c_property("Description", "String", "PX.Web.UI.PXTextEdit", 4, "AR303000");
                        CashAccountID = new c_rule.c_property("Cash Account", "String", "PX.Web.UI.PXSelector", 5, "AR303000");
                        IsActive = new c_rule.c_property("Active", "Boolean", "PX.Web.UI.PXCheckBox", 6, "AR303000");
                        IsCustomerPaymentMethod = new c_rule.c_property("Override", "Boolean", "PX.Web.UI.PXCheckBox", 7, "AR303000");
                        PMInstanceID = new c_rule.c_property("PMInstanceID", "Int32", "PX.Web.UI.PXTextEdit", 8, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton AddPaymentMethod {get;private set;}
				public ToolBarButton CmdViewPaymentMethod {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    AddPaymentMethod = new ToolBarButton("css=div[data-cmd='AddPaymentMethod']", "AddPaymentMethod", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    CmdViewPaymentMethod = new ToolBarButton("css=div[data-cmd='cmdViewPaymentMethod']", "CmdViewPaymentMethod", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t4_grdPaymentMethods", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public CheckBox IsDefault {get;set;}
				public Input PaymentMethodID {get;set;}
				public Input Descr {get;set;}
				public Selector CashAccountID {get;set;}
				public CheckBox IsActive {get;set;}
				public CheckBox IsCustomerPaymentMethod {get;set;}
				public Input PMInstanceID {get;set;}
                
                public c_grid_row() {
                    IsDefault = new CheckBox("ctl00_phG_tab_t4_grdPaymentMethods_ef", "Is Default", "ctl00_phG_tab_t4_grdPaymentMethods", 2, "AR303000");
                    IsDefault.DataField = "IsDefault";
                    IsDefault.ValueType = "PX.Web.UI.PXCheckBox";
                    PaymentMethodID = new Input("ctl00_phG_tab_t4_grdPaymentMethods_ei", "Payment Method", "ctl00_phG_tab_t4_grdPaymentMethods", 3, "AR303000");
                    PaymentMethodID.DataField = "PaymentMethodID";
                    PaymentMethodID.ValueType = "PX.Web.UI.PXTextEdit";
                    Descr = new Input("ctl00_phG_tab_t4_grdPaymentMethods_ei", "Description", "ctl00_phG_tab_t4_grdPaymentMethods", 4, "AR303000");
                    Descr.DataField = "Descr";
                    Descr.ValueType = "PX.Web.UI.PXTextEdit";
                    CashAccountID = new Selector("_ctl00_phG_tab_t4_grdPaymentMethods_lv0_es", "Cash Account", "ctl00_phG_tab_t4_grdPaymentMethods", 5, "AR303000");
                    CashAccountID.DataField = "CashAccountID";
                    CashAccountID.ValueType = "PX.Web.UI.PXSelector";
                    IsActive = new CheckBox("ctl00_phG_tab_t4_grdPaymentMethods", "Active", "ctl00_phG_tab_t4_grdPaymentMethods", 6, "AR303000");
                    IsActive.DataField = "IsActive";
                    IsActive.ValueType = "PX.Web.UI.PXCheckBox";
                    IsCustomerPaymentMethod = new CheckBox("ctl00_phG_tab_t4_grdPaymentMethods", "Override", "ctl00_phG_tab_t4_grdPaymentMethods", 7, "AR303000");
                    IsCustomerPaymentMethod.DataField = "IsCustomerPaymentMethod";
                    IsCustomerPaymentMethod.ValueType = "PX.Web.UI.PXCheckBox";
                    PMInstanceID = new Input("ctl00_phG_tab_t4_grdPaymentMethods_en", "PMInstanceID", "ctl00_phG_tab_t4_grdPaymentMethods", 8, "AR303000");
                    PMInstanceID.DataField = "PMInstanceID";
                    PMInstanceID.ValueType = "PX.Web.UI.PXTextEdit";
                }
            }
        }
        
        public class c_answers_lv0 : Container {
            
			public Selector Es {get;set;}
			public DateSelector Ed {get;set;}
			public DropDown Ec {get;set;}
			public Selector Em {get;set;}
            
            public c_answers_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_answers_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                Es = new Selector("ctl00_phG_tab_t7_PXGridAnswers_lv0_es", "Es", "ctl00_phG_tab_t7_PXGridAnswers_lv0", null, "AR303000");
                Es.DataField = "";
                Ed = new DateSelector("ctl00_phG_tab_t7_PXGridAnswers_lv0_ed", "Ed", "ctl00_phG_tab_t7_PXGridAnswers_lv0", null, "AR303000");
                Ed.DataField = "";
                Ec = new DropDown("ctl00_phG_tab_t7_PXGridAnswers_lv0_ec", "Ec", "ctl00_phG_tab_t7_PXGridAnswers_lv0", null, "AR303000");
                Ec.DataField = "";
                Em = new Selector("ctl00_phG_tab_t7_PXGridAnswers_lv0_em", "Em", "ctl00_phG_tab_t7_PXGridAnswers_lv0", null, "AR303000");
                Em.DataField = "";
                ContainerType = "U";
                DataMemberName = "Answers";
            }
        }
        
        public class c_answers_pxgridanswers : Grid<c_answers_pxgridanswers.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t7_PXGridAnswers";
            
            private static String _GridName = "Answers_PXGridAnswers";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
            public c_answers_pxgridanswers(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t7_PXGridAnswers_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t7_PXGridAnswers_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t7_PXGridAnswers_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "Answers";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property AttributeID;
                    
                    public c_rule.c_property IsRequired;
                    
                    public c_rule.c_property Value;
                    
                    public c_rule.c_property EntityType;
                    
                    public c_rule.c_property EntityID;
                    
                    public c_fields() {
                        AttributeID = new c_rule.c_property("Attribute", "String", "PX.Web.UI.PXSelector", 2, "AR303000");
                        IsRequired = new c_rule.c_property("Required", "Boolean", "PX.Web.UI.PXCheckBox", 3, "AR303000");
                        Value = new c_rule.c_property("Value", "String", "PX.Web.UI.PXTextEdit", 4, "AR303000");
                        EntityType = new c_rule.c_property("Entity Type", "String", "PX.Web.UI.PXDropDown", 5, "AR303000");
                        EntityID = new c_rule.c_property("EntityID", "Int32", "PX.Web.UI.PXTextEdit", 6, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t7_PXGridAnswers", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public Selector AttributeID {get;set;}
				public CheckBox IsRequired {get;set;}
				public Input Value {get;set;}
				public DropDown EntityType {get;set;}
				public Input EntityID {get;set;}
                
                public c_grid_row() {
                    AttributeID = new Selector("_ctl00_phG_tab_t7_PXGridAnswers_lv0_es", "Attribute", "ctl00_phG_tab_t7_PXGridAnswers", 2, "AR303000");
                    AttributeID.DataField = "AttributeID";
                    AttributeID.ValueType = "PX.Web.UI.PXSelector";
                    IsRequired = new CheckBox("ctl00_phG_tab_t7_PXGridAnswers", "Required", "ctl00_phG_tab_t7_PXGridAnswers", 3, "AR303000");
                    IsRequired.DataField = "isRequired";
                    IsRequired.ValueType = "PX.Web.UI.PXCheckBox";
                    Value = new Input("ctl00_phG_tab_t7_PXGridAnswers_ei", "Value", "ctl00_phG_tab_t7_PXGridAnswers", 4, "AR303000");
                    Value.DataField = "Value";
                    Value.ValueType = "PX.Web.UI.PXTextEdit";
                    EntityType = new DropDown("_ctl00_phG_tab_t7_PXGridAnswers_lv0_ec", "Entity Type", "ctl00_phG_tab_t7_PXGridAnswers", 5, "AR303000");
                    EntityType.DataField = "EntityType";
                    EntityType.ValueType = "PX.Web.UI.PXDropDown";
					EntityType.Items.Add("LD","Lead");
					EntityType.Items.Add("AT","Account");
					EntityType.Items.Add("CS","Case");
					EntityType.Items.Add("OP","Opportunity");
					EntityType.Items.Add("IN","Inventory Item");
					EntityType.Items.Add("PR","Project");
					EntityType.Items.Add("PT","Task");
					EntityType.Items.Add("AG","Account Group");
					EntityType.Items.Add("TR","Transaction");
					EntityType.Items.Add("EQ","Equipment");
					EntityType.Items.Add("CT","Contract");
					EntityType.Items.Add("AR","Customer");
					EntityType.Items.Add("AP","Vendor");
					EntityType.Items.Add("EP","Employee");
                    EntityID = new Input("ctl00_phG_tab_t7_PXGridAnswers_en", "EntityID", "ctl00_phG_tab_t7_PXGridAnswers", 6, "AR303000");
                    EntityID.DataField = "EntityID";
                    EntityID.ValueType = "PX.Web.UI.PXTextEdit";
                }
            }
        }
        
        public class c_defpaymentmethodinstancedetails_grdpminstancedetails : Grid<c_defpaymentmethodinstancedetails_grdpminstancedetails.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails";
            
            private static String _GridName = "DefPaymentMethodInstanceDetails_grdPMInstanceDetails";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public PxButtonCollection Buttons {get;set;} //;
            
		    public virtual void New()
		    {
			    if(ToolBar.New.IsEnabled())
			    {
				    ToolBar.New.ClickAndWait();
				    if (Browser.GetBrowser().Alert != null)
				    {
 					    throw new Exception("ALERT: " + Browser.GetBrowser().Alert.Message); 
				    }
			    }
		    }
            
            public c_defpaymentmethodinstancedetails_grdpminstancedetails(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContainerType = "U";
                DataMemberName = "DefPaymentMethodInstanceDetails";
                Buttons = new PxButtonCollection();
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void Search() {
                ActionClick(ToolBar.Search);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Save() {
                ActionClick(ToolBar.Save);
            }
            
            public virtual void Delete() {
                ActionClick(ToolBar.Delete);
            }
            
            public virtual void Note() {
                ActionClick(ToolBar.Note);
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property DetailID_PaymentMethodDetail_descr;
                    
                    public c_rule.c_property Value;
                    
                    public c_rule.c_property PMInstanceID;
                    
                    public c_rule.c_property PaymentMethodID;
                    
                    public c_rule.c_property DetailID;
                    
                    public c_fields() {
                        DetailID_PaymentMethodDetail_descr = new c_rule.c_property("Description", "String", "PX.Web.UI.PXTextEdit", 2, "AR303000");
                        Value = new c_rule.c_property("Value", "String", "PX.Web.UI.PXTextEdit", 3, "AR303000");
                        PMInstanceID = new c_rule.c_property("PMInstanceID", "Int32", "PX.Web.UI.PXTextEdit", 4, "AR303000");
                        PaymentMethodID = new c_rule.c_property("PaymentMethodID", "String", "PX.Web.UI.PXTextEdit", 5, "AR303000");
                        DetailID = new c_rule.c_property("Description", "String", "PX.Web.UI.PXSelector", 6, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton Search {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton New {get;private set;}
				public ToolBarButton Save {get;private set;}
				public ToolBarButton Delete {get;private set;}
				public ToolBarButton Note {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Search = new ToolBarButton("css=div[data-cmd='Search']", "Search", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    New = new ToolBarButton("css=div[data-cmd='AddNew']", "New", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Save = new ToolBarButton("css=div[data-cmd='Save']", "Save", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Delete = new ToolBarButton("css=div[data-cmd='Delete']", "Delete", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Note = new ToolBarButton("css=div[data-cmd='NoteShow']", "Note", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                }
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t1_BillAddress_btnViewBillAddressOnMap", "", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    First = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfFirst0", "", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfPrev0", "", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfNext0", "", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfLast0", "", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public Input DetailID_PaymentMethodDetail_descr {get;set;}
				public Input Value {get;set;}
				public Input PMInstanceID {get;set;}
				public Input PaymentMethodID {get;set;}
				public Selector DetailID {get;set;}
                
                public c_grid_row() {
                    DetailID_PaymentMethodDetail_descr = new Input("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_ei", "Description", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", 2, "AR303000");
                    DetailID_PaymentMethodDetail_descr.DataField = "DetailID_PaymentMethodDetail_descr";
                    DetailID_PaymentMethodDetail_descr.ValueType = "PX.Web.UI.PXTextEdit";
                    Value = new Input("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_ei", "Value", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", 3, "AR303000");
                    Value.DataField = "Value";
                    Value.ValueType = "PX.Web.UI.PXTextEdit";
                    PMInstanceID = new Input("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_en", "PMInstanceID", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", 4, "AR303000");
                    PMInstanceID.DataField = "PMInstanceID";
                    PMInstanceID.ValueType = "PX.Web.UI.PXTextEdit";
                    PaymentMethodID = new Input("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_ei", "PaymentMethodID", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", 5, "AR303000");
                    PaymentMethodID.DataField = "PaymentMethodID";
                    PaymentMethodID.ValueType = "PX.Web.UI.PXTextEdit";
                    DetailID = new Selector("_ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0_es", "Description", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails", 6, "AR303000");
                    DetailID.DataField = "DetailID";
                    DetailID.ValueType = "PX.Web.UI.PXSelector";
                }
            }
        }
        
        public class c_defpaymentmethodinstancedetails_lv0 : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Selector Es {get;set;}
			public DateSelector Ed {get;set;}
			public DropDown Ec {get;set;}
			public Selector Em {get;set;}
            
            public c_defpaymentmethodinstancedetails_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_defpaymentmethodinstancedetails_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Viewonmap() {
                ActionClick(Buttons.Viewonmap);
            }
            
            public virtual void First() {
                ActionClick(Buttons.First);
            }
            
            public virtual void Prev() {
                ActionClick(Buttons.Prev);
            }
            
            public virtual void Next() {
                ActionClick(Buttons.Next);
            }
            
            public virtual void Last() {
                ActionClick(Buttons.Last);
            }
            
            private void Initialize() {
                Es = new Selector("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0_es", "Es", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0", null, "AR303000");
                Es.DataField = "";
                Ed = new DateSelector("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0_ed", "Ed", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0", null, "AR303000");
                Ed.DataField = "";
                Ec = new DropDown("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0_ec", "Ec", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0", null, "AR303000");
                Ec.DataField = "";
                Em = new Selector("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0_em", "Em", "ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lv0", null, "AR303000");
                Em.DataField = "";
                ContainerType = "U";
                DataMemberName = "DefPaymentMethodInstanceDetails";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Viewonmap {get;private set;}
				public Button First {get;private set;}
				public Button Prev {get;private set;}
				public Button Next {get;private set;}
				public Button Last {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Viewonmap = new Button("ctl00_phG_tab_t1_BillAddress_btnViewBillAddressOnMap", "", null, null, "AR303000");
                    First = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfFirst0", "", null, null, "AR303000");
                    Prev = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfPrev0", "", null, null, "AR303000");
                    Next = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfNext0", "", null, null, "AR303000");
                    Last = new Button("ctl00_phG_tab_t1_DefPaymentMethodInstance_grdPMInstanceDetails_lfLast0", "", null, null, "AR303000");
                }
            }
        }
        
        public class c_notificationsources_gridns : Grid<c_notificationsources_gridns.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t9_sp1_gridNS";
            
            private static String _GridName = "NotificationSources_gridNS";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
		    public virtual void New()
		    {
			    if(ToolBar.New.IsEnabled())
			    {
				    ToolBar.New.ClickAndWait();
				    if (Browser.GetBrowser().Alert != null)
				    {
 					    throw new Exception("ALERT: " + Browser.GetBrowser().Alert.Message); 
				    }
			    }
		    }
            
            public c_notificationsources_gridns(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t9_sp1_gridNS_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t9_sp1_gridNS_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t9_sp1_gridNS_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "NotificationSources";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void Delete() {
                ActionClick(ToolBar.Delete);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property SetupID;
                    
                    public c_rule.c_property NBranchID;
                    
                    public c_rule.c_property EMailAccountID;
                    
                    public c_rule.c_property ReportID;
                    
                    public c_rule.c_property NotificationID;
                    
                    public c_rule.c_property Format;
                    
                    public c_rule.c_property Active;
                    
                    public c_rule.c_property OverrideSource;
                    
                    public c_rule.c_property SourceID;
                    
                    public c_fields() {
                        SetupID = new c_rule.c_property("Mailing ID", "String", "PX.Web.UI.PXSelector", 2, "AR303000");
                        NBranchID = new c_rule.c_property("Branch", "String", "PX.Web.UI.PXSegmentMask", 3, "AR303000");
                        EMailAccountID = new c_rule.c_property("Email Account", "Int32", "PX.Web.UI.PXSelector", 4, "AR303000");
                        ReportID = new c_rule.c_property("Report", "String", "PX.Web.UI.PXSelector", 5, "AR303000");
                        NotificationID = new c_rule.c_property("Notification Template", "String", "PX.Web.UI.PXSelector", 6, "AR303000");
                        Format = new c_rule.c_property("Format", "String", "PX.Web.UI.PXDropDown", 7, "AR303000");
                        Active = new c_rule.c_property("Active", "Boolean", "PX.Web.UI.PXCheckBox", 8, "AR303000");
                        OverrideSource = new c_rule.c_property("Overridden", "Boolean", "PX.Web.UI.PXCheckBox", 9, "AR303000");
                        SourceID = new c_rule.c_property("SourceID", "Int32", "PX.Web.UI.PXTextEdit", 10, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton New {get;private set;}
				public ToolBarButton Delete {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    New = new ToolBarButton("css=div[data-cmd='AddNew']", "New", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    Delete = new ToolBarButton("css=div[data-cmd='Delete']", "Delete", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t9_sp1_gridNS", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public Selector SetupID {get;set;}
				public Selector NBranchID {get;set;}
				public Selector EMailAccountID {get;set;}
				public Selector ReportID {get;set;}
				public Selector NotificationID {get;set;}
				public DropDown Format {get;set;}
				public CheckBox Active {get;set;}
				public CheckBox OverrideSource {get;set;}
				public Input SourceID {get;set;}
                
                public c_grid_row() {
                    SetupID = new Selector("_ctl00_phG_tab_t9_sp1_gridNS_lv0_edSetupID", "Mailing ID", "ctl00_phG_tab_t9_sp1_gridNS", 2, "AR303000");
                    SetupID.DataField = "SetupID";
                    SetupID.ValueType = "PX.Web.UI.PXSelector";
                    NBranchID = new Selector("_ctl00_phG_tab_t9_sp1_gridNS_lv0_edNBranchID", "Branch", "ctl00_phG_tab_t9_sp1_gridNS", 3, "AR303000");
                    NBranchID.DataField = "NBranchID";
                    NBranchID.ValueType = "PX.Web.UI.PXSegmentMask";
                    EMailAccountID = new Selector("_ctl00_phG_tab_t9_sp1_gridNS_lv0_edEMailAccountID", "Email Account", "ctl00_phG_tab_t9_sp1_gridNS", 4, "AR303000");
                    EMailAccountID.DataField = "EMailAccountID";
                    EMailAccountID.ValueType = "PX.Web.UI.PXSelector";
                    ReportID = new Selector("_ctl00_phG_tab_t9_sp1_gridNS_lv0_edReportID", "Report", "ctl00_phG_tab_t9_sp1_gridNS", 5, "AR303000");
                    ReportID.DataField = "ReportID";
                    ReportID.ValueType = "PX.Web.UI.PXSelector";
                    NotificationID = new Selector("_ctl00_phG_tab_t9_sp1_gridNS_lv0_edNotificationID", "Notification Template", "ctl00_phG_tab_t9_sp1_gridNS", 6, "AR303000");
                    NotificationID.DataField = "NotificationID";
                    NotificationID.ValueType = "PX.Web.UI.PXSelector";
                    Format = new DropDown("_ctl00_phG_tab_t9_sp1_gridNS_lv0_edFormat", "Format", "ctl00_phG_tab_t9_sp1_gridNS", 7, "AR303000");
                    Format.DataField = "Format";
                    Format.ValueType = "PX.Web.UI.PXDropDown";
					Format.Items.Add("T","Text");
					Format.Items.Add("H","Html");
					Format.Items.Add("E","Excel");
					Format.Items.Add("P","PDF");
                    Active = new CheckBox("_ctl00_phG_tab_t9_sp1_gridNS_lv0_chkActive", "Active", "ctl00_phG_tab_t9_sp1_gridNS", 8, "AR303000");
                    Active.DataField = "Active";
                    Active.ValueType = "PX.Web.UI.PXCheckBox";
                    OverrideSource = new CheckBox("ctl00_phG_tab_t9_sp1_gridNS_ef", "Overridden", "ctl00_phG_tab_t9_sp1_gridNS", 9, "AR303000");
                    OverrideSource.DataField = "OverrideSource";
                    OverrideSource.ValueType = "PX.Web.UI.PXCheckBox";
                    SourceID = new Input("ctl00_phG_tab_t9_sp1_gridNS_en", "SourceID", "ctl00_phG_tab_t9_sp1_gridNS", 10, "AR303000");
                    SourceID.DataField = "SourceID";
                    SourceID.ValueType = "PX.Web.UI.PXTextEdit";
                }
            }
        }
        
        public class c_notificationsources_lv0 : Container {
            
			public DropDown Format {get;set;}
			public Selector NBranchID {get;set;}
			public CheckBox Active {get;set;}
			public Selector SetupID {get;set;}
			public Selector ReportID {get;set;}
			public Selector NotificationID {get;set;}
			public Selector EMailAccountID {get;set;}
			public Selector Es {get;set;}
            
            public c_notificationsources_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_notificationsources_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                Format = new DropDown("ctl00_phG_tab_t9_sp1_gridNS_lv0_edFormat", "Format", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                Format.DataField = "Format";
				Format.Items.Add("T","Text");
				Format.Items.Add("H","Html");
				Format.Items.Add("E","Excel");
				Format.Items.Add("P","PDF");
                NBranchID = new Selector("ctl00_phG_tab_t9_sp1_gridNS_lv0_edNBranchID", "NBranchID", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                NBranchID.DataField = "NBranchID";
                Active = new CheckBox("ctl00_phG_tab_t9_sp1_gridNS_lv0_chkActive", "Active", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                Active.DataField = "Active";
                SetupID = new Selector("ctl00_phG_tab_t9_sp1_gridNS_lv0_edSetupID", "SetupID", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                SetupID.DataField = "SetupID";
                ReportID = new Selector("ctl00_phG_tab_t9_sp1_gridNS_lv0_edReportID", "ReportID", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                ReportID.DataField = "ReportID";
                NotificationID = new Selector("ctl00_phG_tab_t9_sp1_gridNS_lv0_edNotificationID", "NotificationID", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                NotificationID.DataField = "NotificationID";
                EMailAccountID = new Selector("ctl00_phG_tab_t9_sp1_gridNS_lv0_edEMailAccountID", "EMailAccountID", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                EMailAccountID.DataField = "EMailAccountID";
                Es = new Selector("ctl00_phG_tab_t9_sp1_gridNS_lv0_es", "Es", "ctl00_phG_tab_t9_sp1_gridNS_lv0", null, "AR303000");
                Es.DataField = "";
                ContainerType = "U";
                DataMemberName = "NotificationSources";
            }
        }
        
        public class c_notificationrecipients_gridnr : Grid<c_notificationrecipients_gridnr.c_grid_row> {
            
            private static String _GridLocator = "ctl00_phG_tab_t9_sp1_gridNR";
            
            private static String _GridName = "NotificationRecipients_gridNR";
            
            private c_grid_filter_ex gridfilter;
            
            private c_grid_upload gridupload;
            
            public PxToolBar ToolBar {get;set;} //;
            
            public Selector ContextSearch;
            
		    public virtual void New()
		    {
			    if(ToolBar.New.IsEnabled())
			    {
				    ToolBar.New.ClickAndWait();
				    if (Browser.GetBrowser().Alert != null)
				    {
 					    throw new Exception("ALERT: " + Browser.GetBrowser().Alert.Message); 
				    }
			    }
		    }
            
            public c_notificationrecipients_gridnr(String locator, String name) : 
                    base(locator, name) {
                gridfilter = new c_grid_filter_ex("ctl00_phG_tab_t9_sp1_gridNR_fe_gf", null, null, null, "AR303000");
                gridupload = new c_grid_upload("ctl00_phG_tab_t9_sp1_gridNR_upldr", "Files Upload", null, null, "AR303000");
                ToolBar = new PxToolBar();
                ContextSearch = new Selector("ctl00_phG_tab_t9_sp1_gridNR_ab_tlb_fb", "ContextSearch", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                ContainerType = "U";
                DataMemberName = "NotificationRecipients";
            }
            
            public static String GridLocator {
                get {
                    return _GridLocator;
                }
                set {
                    _GridLocator = value;
                }
            }
            
            public static String GridName {
                get {
                    return _GridName;
                }
                set {
                    _GridName = value;
                }
            }
            
            public virtual c_grid_filter_ex FilterForm {
                get {
                    c_grid_filter.Lctr = _GridLocator;
                    return gridfilter;
                }
                set {
                    c_grid_filter.Lctr = _GridLocator;
                    gridfilter = value;
                }
            }
            
            public virtual c_grid_upload UploadForm {
                get {
                    return gridupload;
                }
                set {
                    gridupload = value;
                }
            }
            
            public virtual void Refresh() {
                ActionClick(ToolBar.Refresh);
            }
            
            public virtual void Delete() {
                ActionClick(ToolBar.Delete);
            }
            
            public virtual void Adjust() {
                ActionClick(ToolBar.Adjust);
            }
            
            public virtual void Export() {
                ActionClick(ToolBar.Export);
            }
            
            public virtual void FilterBar() {
                ActionClick(ToolBar.FilterBar);
            }
            
            public virtual void PageFirst() {
                ActionClick(ToolBar.PageFirst);
            }
            
            public virtual void PagePrev() {
                ActionClick(ToolBar.PagePrev);
            }
            
            public virtual void PageNext() {
                ActionClick(ToolBar.PageNext);
            }
            
            public virtual void PageLast() {
                ActionClick(ToolBar.PageLast);
            }
            
            public class c_grid_filter_ex : c_grid_filter {
                
                private c_fields fields;
                
                public c_grid_filter_ex(String locator) : 
                        base(locator) {
                    fields = new c_fields();
                }
                
                public c_grid_filter_ex(String locator, String name, String tabid, int? index, String screenId) : 
                        base(locator, name, tabid, index, screenId) {
                    fields = new c_fields();
                }
                
                public virtual c_fields Fields {
                    get {
                        return fields;
                    }
                    set {
                        fields = value;
                    }
                }
                
                public class c_fields {
                    
                    public c_rule.c_property ContactType;
                    
                    public c_rule.c_property OriginalContactID;
                    
                    public c_rule.c_property ContactID;
                    
                    public c_rule.c_property Email;
                    
                    public c_rule.c_property Format;
                    
                    public c_rule.c_property Active;
                    
                    public c_rule.c_property Hidden;
                    
                    public c_rule.c_property NotificationID;
                    
                    public c_fields() {
                        ContactType = new c_rule.c_property("Contact Type", "String", "PX.Web.UI.PXDropDown", 2, "AR303000");
                        OriginalContactID = new c_rule.c_property("OriginalContactID", "Int32", "PX.Web.UI.PXTextEdit", 3, "AR303000");
                        ContactID = new c_rule.c_property("Contact ID", "String", "PX.Web.UI.PXSelector", 4, "AR303000");
                        Email = new c_rule.c_property("Email", "String", "PX.Web.UI.PXTextEdit", 5, "AR303000");
                        Format = new c_rule.c_property("Format", "String", "PX.Web.UI.PXDropDown", 6, "AR303000");
                        Active = new c_rule.c_property("Active", "Boolean", "PX.Web.UI.PXCheckBox", 7, "AR303000");
                        Hidden = new c_rule.c_property("Bcc", "Boolean", "PX.Web.UI.PXCheckBox", 8, "AR303000");
                        NotificationID = new c_rule.c_property("NotificationID", "Int32", "PX.Web.UI.PXTextEdit", 9, "AR303000");
                    }
                }
            }
            
            public class PxToolBar : PxControlCollection {
                
				public ToolBarButton Refresh {get;private set;}
				public ToolBarButton New {get;private set;}
				public ToolBarButton Delete {get;private set;}
				public ToolBarButton Adjust {get;private set;}
				public ToolBarButton Export {get;private set;}
				public ToolBarButton FilterBar {get;private set;}
				public ToolBarButton PageFirst {get;private set;}
				public ToolBarButton PagePrev {get;private set;}
				public ToolBarButton PageNext {get;private set;}
				public ToolBarButton PageLast {get;private set;}
                
                public PxToolBar() {
                    Initialize();
                }
                
                private void Initialize() {
                    Refresh = new ToolBarButton("css=div[data-cmd='Refresh']", "Refresh", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    New = new ToolBarButton("css=div[data-cmd='AddNew']", "New", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    Delete = new ToolBarButton("css=div[data-cmd='Delete']", "Delete", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    Adjust = new ToolBarButton("css=div[data-cmd='AdjustColumns']", "Adjust", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    Export = new ToolBarButton("css=div[data-cmd='ExportExcel']", "Export", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    PageFirst = new ToolBarButton("css=div[data-cmd='PageFirst']", "PageFirst", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    PagePrev = new ToolBarButton("css=div[data-cmd='PagePrev']", "PagePrev", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    PageNext = new ToolBarButton("css=div[data-cmd='PageNext']", "PageNext", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                    PageLast = new ToolBarButton("css=div[data-cmd='PageLast']", "PageLast", "ctl00_phG_tab_t9_sp1_gridNR", null, "AR303000");
                }
            }
            
            public class c_grid_row {
                
				public DropDown ContactType {get;set;}
				public Input OriginalContactID {get;set;}
				public Selector ContactID {get;set;}
				public Input Email {get;set;}
				public DropDown Format {get;set;}
				public CheckBox Active {get;set;}
				public CheckBox Hidden {get;set;}
				public Input NotificationID {get;set;}
                
                public c_grid_row() {
                    ContactType = new DropDown("_ctl00_phG_tab_t9_sp1_gridNR_lv0_edContactType", "Contact Type", "ctl00_phG_tab_t9_sp1_gridNR", 2, "AR303000");
                    ContactType.DataField = "ContactType";
                    ContactType.ValueType = "PX.Web.UI.PXDropDown";
					ContactType.Items.Add("P","Primary");
					ContactType.Items.Add("B","Billing");
					ContactType.Items.Add("S","Shipping");
					ContactType.Items.Add("E","Employee");
					ContactType.Items.Add("C","Contact");
                    OriginalContactID = new Input("ctl00_phG_tab_t9_sp1_gridNR_en", "OriginalContactID", "ctl00_phG_tab_t9_sp1_gridNR", 3, "AR303000");
                    OriginalContactID.DataField = "OriginalContactID";
                    OriginalContactID.ValueType = "PX.Web.UI.PXTextEdit";
                    ContactID = new Selector("_ctl00_phG_tab_t9_sp1_gridNR_lv0_edContactID", "Contact ID", "ctl00_phG_tab_t9_sp1_gridNR", 4, "AR303000");
                    ContactID.DataField = "ContactID";
                    ContactID.ValueType = "PX.Web.UI.PXSelector";
                    Email = new Input("ctl00_phG_tab_t9_sp1_gridNR_ei", "Email", "ctl00_phG_tab_t9_sp1_gridNR", 5, "AR303000");
                    Email.DataField = "Email";
                    Email.ValueType = "PX.Web.UI.PXTextEdit";
                    Format = new DropDown("_ctl00_phG_tab_t9_sp1_gridNR_lv0_ec", "Format", "ctl00_phG_tab_t9_sp1_gridNR", 6, "AR303000");
                    Format.DataField = "Format";
                    Format.ValueType = "PX.Web.UI.PXDropDown";
					Format.Items.Add("T","Text");
					Format.Items.Add("H","Html");
					Format.Items.Add("E","Excel");
					Format.Items.Add("P","PDF");
                    Active = new CheckBox("ctl00_phG_tab_t9_sp1_gridNR_ef", "Active", "ctl00_phG_tab_t9_sp1_gridNR", 7, "AR303000");
                    Active.DataField = "Active";
                    Active.ValueType = "PX.Web.UI.PXCheckBox";
                    Hidden = new CheckBox("ctl00_phG_tab_t9_sp1_gridNR_ef", "Bcc", "ctl00_phG_tab_t9_sp1_gridNR", 8, "AR303000");
                    Hidden.DataField = "Hidden";
                    Hidden.ValueType = "PX.Web.UI.PXCheckBox";
                    NotificationID = new Input("ctl00_phG_tab_t9_sp1_gridNR_en", "NotificationID", "ctl00_phG_tab_t9_sp1_gridNR", 9, "AR303000");
                    NotificationID.DataField = "NotificationID";
                    NotificationID.ValueType = "PX.Web.UI.PXTextEdit";
                }
            }
        }
        
        public class c_notificationrecipients_lv0 : Container {
            
			public DropDown ContactType {get;set;}
			public Selector ContactID {get;set;}
			public Selector Es {get;set;}
			public DropDown Ec {get;set;}
            
            public c_notificationrecipients_lv0(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_notificationrecipients_lv0(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            private void Initialize() {
                ContactType = new DropDown("ctl00_phG_tab_t9_sp1_gridNR_lv0_edContactType", "ContactType", "ctl00_phG_tab_t9_sp1_gridNR_lv0", null, "AR303000");
                ContactType.DataField = "ContactType";
				ContactType.Items.Add("P","Primary");
				ContactType.Items.Add("B","Billing");
				ContactType.Items.Add("S","Shipping");
				ContactType.Items.Add("E","Employee");
				ContactType.Items.Add("C","Contact");
                ContactID = new Selector("ctl00_phG_tab_t9_sp1_gridNR_lv0_edContactID", "ContactID", "ctl00_phG_tab_t9_sp1_gridNR_lv0", null, "AR303000");
                ContactID.DataField = "ContactID";
                Es = new Selector("ctl00_phG_tab_t9_sp1_gridNR_lv0_es", "Es", "ctl00_phG_tab_t9_sp1_gridNR_lv0", null, "AR303000");
                Es.DataField = "";
                Ec = new DropDown("ctl00_phG_tab_t9_sp1_gridNR_lv0_ec", "Ec", "ctl00_phG_tab_t9_sp1_gridNR_lv0", null, "AR303000");
                Ec.DataField = "";
                ContainerType = "U";
                DataMemberName = "NotificationRecipients";
            }
        }
        
        public class c_changeiddialog_formchangeid : Container {
            
            public PxButtonCollection Buttons {get;set;} //;
            
			public Selector CD {get;set;}
            
            public c_changeiddialog_formchangeid(String locator, String name) : 
                    base(locator, name) {
                Initialize();
            }
            
            public c_changeiddialog_formchangeid(String locator, String name, String tabid, int? index, String screenId) : 
                    base(locator, name, tabid, index, screenId) {
                Initialize();
            }
            
            public virtual void Ok() {
                ActionClick(Buttons.Ok);
            }
            
            private void Initialize() {
                CD = new Selector("ctl00_phF_pnlChangeID_formChangeID_edAcctCD", "CD", "ctl00_phF_pnlChangeID_formChangeID", null, "AR303000");
                CD.DataField = "CD";
                ContainerType = "U";
                DataMemberName = "ChangeIDDialog";
                Buttons = new PxButtonCollection();
            }
            
            public class PxButtonCollection : PxControlCollection {
                
				public Button Ok {get;private set;}
                
                public PxButtonCollection() {
                    Initialize();
                }
                
                private void Initialize() {
                    Ok = new Button("ctl00_phF_pnlChangeID_btnOK", "", null, null, "AR303000");
                }
            }
        }
    }
}
#endregion
